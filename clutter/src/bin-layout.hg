/* Copyright (C) 2011 The cluttermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <cluttermm/layout-manager.h>

_DEFS(cluttermm,clutter)
_PINCLUDE(cluttermm/private/layout-manager_p.h)

#m4 _PUSH(SECTION_CC_PRE_INCLUDES)
#define CLUTTER_DISABLE_DEPRECATION_WARNINGS 1
#m4 _POP()

namespace Clutter
{

/**
 * @deprecated Use ActorAlign and the Actor API instead.
 */
_WRAP_ENUM(BinAlignment, ClutterBinAlignment)

class BinLayout :
    public LayoutManager
{
  _CLASS_GOBJECT(BinLayout, ClutterBinLayout, CLUTTER_BIN_LAYOUT, LayoutManager, ClutterLayoutManager)

protected:
  _WRAP_CTOR(BinLayout(BinAlignment x_align, BinAlignment y_align), clutter_bin_layout_new)

public:
  _WRAP_CREATE(BinAlignment x_align, BinAlignment y_align)

  _WRAP_METHOD(void set_alignment(const Glib::RefPtr<Actor>& child, BinAlignment x_align, BinAlignment y_align), clutter_bin_layout_set_alignment, deprecated "Use the x-align and y-align properties of Actor instead.")
  _WRAP_METHOD(void get_alignment(const Glib::RefPtr<Actor>& child, BinAlignment& x_align, BinAlignment& y_align) const, clutter_bin_layout_get_alignment, deprecated "Use the x-align and y-align properties of Actor instead.")
  _WRAP_METHOD(void add(const Glib::RefPtr<Actor>& child, BinAlignment x_align, BinAlignment y_align), clutter_bin_layout_add, deprecated "Use Actor::add_child() instead.")

  _WRAP_PROPERTY("x-align", BinAlignment, deprecated "Use the x-align and y-align properties of Actor instead.")
  _WRAP_PROPERTY("y-align", BinAlignment, deprecated "Use the x-align and y-align properties of Actor instead.")
};

} // namespace Clutter

