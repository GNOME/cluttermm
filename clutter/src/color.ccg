/* Copyright (C) 2007 The cluttermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/object.h>
#include <clutter/clutter-layout.h> /* TODO: Remove this when we have wrapped enough types as C++. */
 
_DEFS(cluttermm,clutter)

namespace Clutter
{

Color::Color()
{
  ClutterColor tmp = { 0, 0, 0, 0, };
  gobject_ = clutter_color_copy(&tmp);
}

Color::Color(const Glib::ustring& color)
{
  ClutterColor tmp = { 0, 0, 0, 0, };
  gobject_ = clutter_color_copy(&tmp);
  clutter_color_parse(color.c_str(), gobject_);
}

Color Color::add(const Color& color) const
{
  return *this + color;
}

Color Color::subtract(const Color& color)
{
  return *this - color;
}


Color operator+(const Color& color1, const Color& color2)
{
  Color result;
  clutter_color_add(color1.gobj(), color2.gobj(), result.gobj());
  return result;
}

Color operator-(const Color& color1, const Color& color2)
{
  Color result;
  clutter_color_subtract(color1.gobj(), color2.gobj(), result.gobj());
  return result;
}

} //namespace Clutter

