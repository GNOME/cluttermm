<root>
<function name="clutter_eglx_get_stage_visual">
<description>
FIXME


</description>
<parameters>
<parameter name="stage">
<parameter_description> a #ClutterStage
</parameter_description>
</parameter>
</parameters>
<return> FIXME

Since: 0.4
</return>
</function>

<function name="clutter_label_get_alignment">
<description>
Return value: The labels #PangoAlignment

</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
</parameters>
<return> The labels #PangoAlignment

Since 0.2
</return>
</function>

<function name="clutter_layout_natural_request">
<description>
Queries a #ClutterLayout actor for its natural (default) width
and height.

Since: 0.4

</description>
<parameters>
<parameter name="layout">
<parameter_description> a #ClutterLayout
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> return location for the natural width
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> return location for the natural height
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="ClutterLayout">
<description>
The layout types that the #ClutterLayout supports.

Since: 0.4

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_event_get">
<description>
Pops an event off the event queue. Applications should not need to call 
this.


</description>
<parameters>
</parameters>
<return> A #ClutterEvent or NULL if queue empty

Since: 0.4
</return>
</function>

<function name="clutter_score_append">
<description>
Appends a new timeline to an one existing in the score.


</description>
<parameters>
<parameter name="score">
<parameter_description> A #ClutterScore
</parameter_description>
</parameter>
<parameter name="timeline_existing">
<parameter_description> A #ClutterTimeline in the score
</parameter_description>
</parameter>
<parameter name="timeline_new">
<parameter_description> A new #ClutterTimeline to start when #timeline_existing has
completed,
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_array_get_element">
<description>
Retrieves the #JsonNode containing the value of the element at @index_
inside a #JsonArray.


</description>
<parameters>
<parameter name="array">
<parameter_description> a #JsonArray
</parameter_description>
</parameter>
<parameter name="index_">
<parameter_description> the index of the element to retrieve
</parameter_description>
</parameter>
</parameters>
<return> a pointer to the #JsonNode at the requested index
</return>
</function>

<function name="json_generator_to_file">
<description>
Creates a JSON data stream and puts it inside @filename, overwriting the
current file contents. This operation is atomic.


</description>
<parameters>
<parameter name="generator">
<parameter_description> a #JsonGenerator
</parameter_description>
</parameter>
<parameter name="filename">
<parameter_description> path to the target file
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError, or %NULL
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if saving was successful.
</return>
</function>

<function name="clutter_media_set_uri">
<description>
Sets the uri of @media to @uri.

</description>
<parameters>
<parameter name="media">
<parameter_description> #ClutterMedia object
</parameter_description>
</parameter>
<parameter name="uri">
<parameter_description> Uri
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_stage_get_actor_at_pos">
<description>
Checks the scene at the coordinates @x and @y and returns a pointer
to the #ClutterActor at those coordinates.


</description>
<parameters>
<parameter name="stage">
<parameter_description> a #ClutterStage
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> X coordinate to check
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> Y coordinate to check
</parameter_description>
</parameter>
</parameters>
<return> the actor at the specified coordinates, if any
</return>
</function>

<function name="json_parser_load_from_data">
<description>
Loads a JSON stream from a buffer and parses it. You can call this function
multiple times with the same #JsonParser object, but the contents of the
parser will be destroyed each time.


</description>
<parameters>
<parameter name="parser">
<parameter_description> a #JsonParser
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> the buffer to parse
</parameter_description>
</parameter>
<parameter name="length">
<parameter_description> the length of the buffer, or -1
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError, or %NULL
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the buffer was succesfully parser. In case
of error, @error is set accordingly and %FALSE is returned
</return>
</function>

<function name="clutter_clone_texture_set_parent_texture">
<description>
Sets the parent texture cloned by the #ClutterCloneTexture.

Since: 0.2

</description>
<parameters>
<parameter name="clone">
<parameter_description> a #ClutterCloneTexture
</parameter_description>
</parameter>
<parameter name="texture">
<parameter_description> a #ClutterTexture or %NULL
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_get_rxang">
<description>
Gets the angle of rotation around the X axis.


</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> the angle of rotation

Since: 0.4
</return>
</function>

<function name="clutter_alpha_set_timeline">
<description>
Binds @alpha to @timeline.

Since: 0.2

</description>
<parameters>
<parameter name="alpha">
<parameter_description> A #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="timeline">
<parameter_description> A #ClutterTimeline
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_set_scale_with_gravityx">
<description>
Scales the actor by scale_x, scale_y taking into consideration the
required gravity.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="scale_x">
<parameter_description> #ClutterFixed scaling factor for x axis
</parameter_description>
</parameter>
<parameter name="scale_y">
<parameter_description> #ClutterFixed scaling factor for y axis
</parameter_description>
</parameter>
<parameter name="gravity">
<parameter_description> #ClutterGravity to apply to scaling.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_get_abs_position">
<description>
Gets the absolute position of an actor in pixels relative
to the stage.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> Location to store x position if non NULL.
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> Location to store y position if non NULL.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_color_darken">
<description>
Darkens @src by a fixed amount, and saves the changed color
in @dest.

</description>
<parameters>
<parameter name="src">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
<parameter name="dest">
<parameter_description> return location for the darker color
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_timeout_pool_new">
<description>
Creates a new timeout pool source. A timeout pool should be used when
multiple timeout functions, running at the same priority, are needed and
the g_timeout_add() API might lead to starvation of the time slice of
the main loop. A timeout pool allocates a single time slice of the main
loop and runs every timeout function inside it. The timeout pool is
always sorted, so that the extraction of the next timeout function is
a constant time operation.

Inside Clutter, every #ClutterTimeline share the same timeout pool, unless
the CLUTTER_TIMELINE=no-pool environment variable is set.


</description>
<parameters>
<parameter name="priority">
<parameter_description> the priority of the timeout pool. Typically this will
be #G_PRIORITY_DEFAULT
</parameter_description>
</parameter>
</parameters>
<return> the newly created #ClutterTimeoutPool

Since: 0.4
</return>
</function>

<function name="clutter_actor_query_coords">
<description>
Requests the untransformed co-ordinates (in ClutterUnits) for the
#ClutterActor relative to any parent.

This function should not be called directly by applications instead
the various position/geometry methods should be used.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="box">
<parameter_description> A location to store the actors #ClutterActorBox co-ordinates
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_alpha_new">
<description>
Creates a new #ClutterAlpha instance.  You must set a function
to compute the alpha value using clutter_alpha_set_func() and
bind a #ClutterTimeline object to the #ClutterAlpha instance
using clutter_alpha_set_timeline().

You should use the newly created #ClutterAlpha instance inside
a #ClutterBehaviour object.


</description>
<parameters>
</parameters>
<return> the newly created empty #ClutterAlpha instance.

Since: 0.2
</return>
</function>

<function name="clutter_effect_template_new_full">
<description>
Creates a new #ClutterEffectTemplate, to be used with the effects API.

A #ClutterEffectTemplate binds a timeline and an alpha function and can
be used as a template for multiple calls of clutter_effect_fade(),
clutter_effect_move() and clutter_effect_scale().

This API is intended for simple animations involving a single actor;
for more complex animations, you should see #ClutterBehaviour and the
derived classes.

This function is intended for language bindings only: if @notify is
not %NULL it will be called to dispose of @user_data.


</description>
<parameters>
<parameter name="timeline">
<parameter_description> a #ClutterTimeline
</parameter_description>
</parameter>
<parameter name="alpha_func">
<parameter_description> an alpha function to use for the template
</parameter_description>
</parameter>
<parameter name="user_data">
<parameter_description> data to be passed to the alpha function, or %NULL
</parameter_description>
</parameter>
<parameter name="notify">
<parameter_description> function to be called when disposing the alpha function&apos;s use
data, or %NULL
</parameter_description>
</parameter>
</parameters>
<return> the newly created #ClutterEffectTemplate object

Since: 0.4
</return>
</function>

<function name="clutter_actor_set_scale">
<description>
Scales an actor with floating point parameters.

Since: 0.2

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="scale_x">
<parameter_description> double factor to scale actor by horizontally.
</parameter_description>
</parameter>
<parameter name="scale_y">
<parameter_description> double factor to scale actor by vertically.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_set_parent">
<description>
Sets the parent of @self to @parent.  The opposite function is
clutter_actor_unparent().

This function should not be used by applications but by custom
&apos;composite&apos; actor sub classes.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="parent">
<parameter_description> A new #ClutterActor parent
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_node_take_object">
<description>
Sets @object inside @node. The reference count of @object is not increased.

</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
<parameter name="object">
<parameter_description> a #JsonObject
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_group_get_children">
<description>
Get a list containing all actors contained in the group.


</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterGroup
</parameter_description>
</parameter>
</parameters>
<return> A list of #ClutterActors. You  should free the returned
list using g_list_free() when finished using it.

@Deprecated: 0.4: This function is obsolete, use
clutter_container_get_children() instead.
</return>
</function>

<function name="clutter_effect_template_new">
<description>
Creates a new #ClutterEffectTemplate, to be used with the effects API.

A #ClutterEffectTemplate binds a timeline and an alpha function and can
be used as a template for multiple calls of clutter_effect_fade(),
clutter_effect_move() and clutter_effect_scale().

This API is intended for simple animations involving a single actor;
for more complex animations, you should see #ClutterBehaviour and the
derived classes.


</description>
<parameters>
<parameter name="timeline">
<parameter_description>  A #ClutterTimeline for the template (will be cloned)
</parameter_description>
</parameter>
<parameter name="alpha_func">
<parameter_description> An alpha func to use for the template.
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterEffectTemplate

Since: 0.4
</return>
</function>

<function name="clutter_behaviour_remove_all">
<description>
Removes every actor from the list that @behave holds.

Since: 0.4

</description>
<parameters>
<parameter name="behave">
<parameter_description> a #ClutterBehaviour
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_color_from_hlsx">
<description>
Converts a color expressed in HLS (hue, luminance and saturation)
values into a #ClutterColor.

</description>
<parameters>
<parameter name="dest">
<parameter_description> return location for a #ClutterColor
</parameter_description>
</parameter>
<parameter name="hue">
<parameter_description> hue value (0 .. 360)
</parameter_description>
</parameter>
<parameter name="luminance">
<parameter_description> luminance value (0 .. 1)
</parameter_description>
</parameter>
<parameter name="saturation">
<parameter_description> saturation value (0 .. 1)
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_event_peek">
<description>
Return value: A #ClutterEvent or NULL if queue empty.

</description>
<parameters>
</parameters>
<return> A #ClutterEvent or NULL if queue empty.

Since: 0.4
</return>
</function>

<function name="clutter_hbox_new">
<description>
Creates a new horizontal layout box.


</description>
<parameters>
</parameters>
<return> the newly created #ClutterHBox

Since: 0.4
</return>
</function>

<function name="clutter_actor_get_rzang">
<description>
Gets the angle of rotation around the Z axis.


</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> the angle of rotation

Since: 0.4
</return>
</function>

<function name="clutter_entry_get_visible_cursor">
<description>
Return value: whether the input cursor is visible

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
</parameters>
<return> whether the input cursor is visible

Since: 0.4
</return>
</function>

<function name="clutter_glx_get_stage_visual">
<description>
Return value: The XVisualInfo for the stage.

</description>
<parameters>
<parameter name="stage">
<parameter_description> a #ClutterStage
</parameter_description>
</parameter>
</parameters>
<return> The XVisualInfo for the stage.

Since: 0.4
</return>
</function>

<function name="clutter_stage_set_user_resizable">
<description>
Sets if the stage is able to be resized by user interaction (i.e via
window manager controls)

Since: 0.4

</description>
<parameters>
<parameter name="stage">
<parameter_description> a #ClutterStage
</parameter_description>
</parameter>
<parameter name="resizable">
<parameter_description> whether if the stage should be user resizable.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_parser_get_current_pos">
<description>
Retrieves the current position inside the current line, starting
from 0.


</description>
<parameters>
<parameter name="parser">
<parameter_description> a #JsonParser
</parameter_description>
</parameter>
</parameters>
<return> the position in the current line
</return>
</function>

<function name="clutter_effect_template_set_timeline_clone">
<description>
Sets if effects using this template should make a copy of the 
templates timeline (default) or reference the effects timeline.

Since: 0.6

</description>
<parameters>
<parameter name="template_">
<parameter_description>  A #ClutterEffectTemplate
</parameter_description>
</parameter>
<parameter name="setting">
<parameter_description> A boolean indicating if effects should clone the timeline.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_path_new">
<description>
Creates a new path behaviour. You can use this behaviour to drive
actors along the nodes of a path, described by the @knots.


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha, or %NULL
</parameter_description>
</parameter>
<parameter name="knots">
<parameter_description> a list of #ClutterKnots, or %NULL for an empty path
</parameter_description>
</parameter>
<parameter name="n_knots">
<parameter_description> the number of nodes in the path
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterBehaviour

Since: 0.2
</return>
</function>

<function name="clutter_scriptable_set_name">
<description>
Sets @name as the name for this instance of #ClutterScriptableIface.
This name can be used by user interface designer applications.

Since: 0.6

</description>
<parameters>
<parameter name="scriptable">
<parameter_description> a #ClutterScriptable
</parameter_description>
</parameter>
<parameter name="name">
<parameter_description> the name of the object
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_box_pack_defaults">
<description>
Packs @actor into @box, using the default settings for the
pack type and padding.

Since: 0.4

</description>
<parameters>
<parameter name="box">
<parameter_description> a #ClutterBox
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_node_type_name">
<description>
Retrieves the user readable name of the data type contained by @node.


</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
</parameters>
<return> a string containing the name of the type. The returned string
is owned by the node and should never be modified or freed
</return>
</function>

<function name="clutter_knot_copy">
<description>
Makes an allocated copy of a knot.


</description>
<parameters>
<parameter name="knot">
<parameter_description> a #ClutterKnot
</parameter_description>
</parameter>
</parameters>
<return> the copied knot.

Since: 0.2
</return>
</function>

<function name="clutter_knot_equal">
<description>
Compares to knot and checks if the point to the same location.


</description>
<parameters>
<parameter name="knot_a">
<parameter_description> First knot
</parameter_description>
</parameter>
<parameter name="knot_b">
<parameter_description> Second knot
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the knots point to the same location.

Since: 0.2
</return>
</function>

<function name="ClutterContainer">
<description>
The ::actor-removed signal is emitted each time an actor
is removed from @container.

Since: 0.4

</description>
<parameters>
<parameter name="container">
<parameter_description> the actor which received the signal
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> the child that has been removed from @container
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_group_add_many">
<description>
Adds a NULL-terminated list of actors to a group.  This function is
equivalent to calling clutter_group_add() for each member of the list.

@Deprecated: 0.4: This function is obsolete, use clutter_container_add()
instead.

</description>
<parameters>
<parameter name="group">
<parameter_description> A #ClutterGroup
</parameter_description>
</parameter>
<parameter name="first_actor">
<parameter_description> the #ClutterActor actor to add to the group
</parameter_description>
</parameter>
<parameter name="Varargs">
<parameter_description> additional actors to add to the group
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_vbox_new">
<description>
Creates a new vertical layout box.


</description>
<parameters>
</parameters>
<return> the newly created #ClutterVBox

Since: 0.4
</return>
</function>

<function name="clutter_actor_unparent">
<description>
This function should not be used in applications.  It should be called by
implementations of container actors, to dissociate a child from the
container.

Since: 0.1.1

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_color_to_hlsx">
<description>
Converts @src to the HLS format. Returned hue is in degrees (0 .. 360),
luminance and saturation from interval &amp;lt;0 .. 1&amp;gt;.

</description>
<parameters>
<parameter name="src">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
<parameter name="hue">
<parameter_description> return location for the hue value or %NULL
</parameter_description>
</parameter>
<parameter name="luminance">
<parameter_description> return location for the luminance value or %NULL
</parameter_description>
</parameter>
<parameter name="saturation">
<parameter_description> return location for the saturation value or %NULL
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_timeout_pool_add">
<description>
Sets a function to be called at regular intervals, and puts it inside
the @pool. The function is repeatedly called until it returns %FALSE,
at which point the timeout is automatically destroyed and the function
won&apos;t be called again. If @notify is not %NULL, the @notify function
will be called. The first call to @func will be at the end of @interval.

Note that timeout functions may be delayed, due to the processing of other
event sources. Thus they should not be relied on for precise timing.
After each call to the timeout function, the time of the next
timeout is recalculated based on the current time and the given interval
(it does not try to &apos;catch up&apos; time lost in delays).


</description>
<parameters>
<parameter name="pool">
<parameter_description> a #ClutterTimeoutPool
</parameter_description>
</parameter>
<parameter name="interval">
<parameter_description> the time between calls to the function, in milliseconds
</parameter_description>
</parameter>
<parameter name="func">
<parameter_description> function to call
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> data to pass to the function, or %NULL
</parameter_description>
</parameter>
<parameter name="notify">
<parameter_description> function to call when the timeout is removed, or %NULL
</parameter_description>
</parameter>
</parameters>
<return> the ID (greater than 0) of the timeout inside the pool.
Use clutter_timeout_pool_remove() to stop the timeout.

Since: 0.4
</return>
</function>

<function name="clutter_media_set_position">
<description>
Sets the playback position of @media to @position.

</description>
<parameters>
<parameter name="media">
<parameter_description> A #ClutterMedia object
</parameter_description>
</parameter>
<parameter name="position">
<parameter_description> The desired position.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_box_remove_all">
<description>
Removes all children actors from the #ClutterBox

Since: 0.4

</description>
<parameters>
<parameter name="box">
<parameter_description> a #ClutterBox
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_array_remove_element">
<description>
Removes the #JsonNode inside @array at @index_ freeing its allocated
resources.

</description>
<parameters>
<parameter name="array">
<parameter_description> a #JsonArray
</parameter_description>
</parameter>
<parameter name="index_">
<parameter_description> the position of the element to be removed
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_stage_get_default">
<description>
Return value: the main #ClutterStage.  You should never

</description>
<parameters>
</parameters>
<return> the main #ClutterStage.  You should never
destroy or unref the returned actor.
</return>
</function>

<function name="clutter_actor_push_transform_child">
<description>
Makes all the children follow the parent&apos;s transformation matrix
until clutter_actor_pop_transform_child().

This function should be used by every actor with children inside
its paint function, in order to make its children transform (that is:
rotate, scale, etc.) with its parent, like:

&amp;lt;informalexample&amp;gt;&amp;lt;programlisting&amp;gt;
clutter_actor_push_transform_child (&amp;lt;!-- --&amp;gt;);
for (l = my_actor-&amp;gt;children; l != NULL; l = l-&amp;gt;next)
{
ClutterActor *actor = l-&amp;gt;data;
clutter_actor_paint (child);
}
clutter_actor_pop_transform_child (&amp;lt;!-- --&amp;gt;);
&amp;lt;/programlisting&amp;gt;&amp;lt;/informalexample&amp;gt;

Since: 0.6

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_container_foreach">
<description>
Calls @callback for each child of @container.

Since: 0.4

</description>
<parameters>
<parameter name="container">
<parameter_description> a #ClutterContainer
</parameter_description>
</parameter>
<parameter name="callback">
<parameter_description> a function to be called for each child
</parameter_description>
</parameter>
<parameter name="user_data">
<parameter_description> data to be passed to the function, or %NULL
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="ClutterBehaviourOpacity">
<description>
Final opacity level of the behaviour.

Since: 0.2

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_container_add_valist">
<description>
Alternative va_list version of clutter_container_add().

Since: 0.4

</description>
<parameters>
<parameter name="container">
<parameter_description> a #ClutterContainer
</parameter_description>
</parameter>
<parameter name="first_actor">
<parameter_description> the first #ClutterActor to add
</parameter_description>
</parameter>
<parameter name="var_args">
<parameter_description> list of actors to add, followed by %NULL
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_bspline_append">
<description>
Appends a bezier spline defined by the last control point of bezier spline
bs and the array of #ClutterKnot control points to the orginal bezier spline
bs.

Since: 0.4

</description>
<parameters>
<parameter name="bs">
<parameter_description> a #ClutterBehaviourBspline
</parameter_description>
</parameter>
<parameter name="first_knot">
<parameter_description> first #ClutterKnot
</parameter_description>
</parameter>
<parameter name="VarArgs">
<parameter_description> a NULL-terminated array of #ClutterKnot control points.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_label_new_with_text">
<description>
Creates a new #ClutterLabel displaying @text using @font_name.


</description>
<parameters>
<parameter name="font_name">
<parameter_description> the name (and size) of the font to be used
</parameter_description>
</parameter>
<parameter name="text">
<parameter_description> the text to be displayed
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterLabel
</return>
</function>

<function name="clutter_label_set_font_name">
<description>
Sets @font_name as the font used by @label.

@font_name must be a string containing the font name and its
size, similarly to what you would feed to the
pango_font_description_from_string() function.

</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
<parameter name="font_name">
<parameter_description> a font name and size, or %NULL for the default font
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_score_is_playing">
<description>
Query state of a #ClutterScore instance.


</description>
<parameters>
<parameter name="score">
<parameter_description> A #ClutterScore
</parameter_description>
</parameter>
</parameters>
<return> TRUE if score is currently playing, FALSE if not.
</return>
</function>

<function name="clutter_get_default_backend">
<description>
FIXME


</description>
<parameters>
</parameters>
<return> the default backend. You should not ref or
unref the returned object. Applications should not rarely need
to use this.

Since: 0.4
</return>
</function>

<function name="clutter_glx_get_stage_window">
<description>
Gets the stages X Window. 


</description>
<parameters>
<parameter name="stage">
<parameter_description> a #ClutterStage
</parameter_description>
</parameter>
</parameters>
<return> An XID for the stage window.

Since: 0.4
</return>
</function>

<function name="clutter_behaviour_ellipse_get_angle_end">
<description>
Gets the at which movements ends.


</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
</parameters>
<return> angle in degrees

Since: 0.4
</return>
</function>

<function name="clutter_actor_pick">
<description>
Renders a silhouette of the actor in supplied color.

This function should not never be called directly by applications.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="color">
<parameter_description> A #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_texture_is_tiled">
<description>
Checks if #ClutterTexture is tiled.

This function is only useful for sub class implementations
and never should be called by an application.


</description>
<parameters>
<parameter name="texture">
<parameter_description> A #ClutterTexture
</parameter_description>
</parameter>
</parameters>
<return> TRUE if texture is tiled
</return>
</function>

<function name="clutter_glx_get_default_screen">
<description>
Gets the number of the default X Screen object.


</description>
<parameters>
</parameters>
<return> the number of the default Screen object.

Since: 0.4
</return>
</function>

<function name="clutter_media_get_duration">
<description>
Retrieves the duration of the media stream that @media represents.


</description>
<parameters>
<parameter name="media">
<parameter_description> A #ClutterMedia object
</parameter_description>
</parameter>
</parameters>
<return> The length of the media stream.
</return>
</function>

<function name="clutter_entry_set_text">
<description>
Sets @text as the text to be displayed by @entry. The
ClutterEntry::text-changed signal is emitted.

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
<parameter name="text">
<parameter_description> the text to be displayed
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_threads_add_timeout">
<description>
Simple wrapper around clutter_threads_add_timeout_full().


</description>
<parameters>
<parameter name="interval">
<parameter_description> the time between calls to the function, in milliseconds
</parameter_description>
</parameter>
<parameter name="func">
<parameter_description> function to call
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> data to pass to the function
</parameter_description>
</parameter>
</parameters>
<return> the ID (greater than 0) of the event source.

Since: 0.4
</return>
</function>

<function name="json_node_new">
<description>
Creates a new #JsonNode of @type.


</description>
<parameters>
<parameter name="type">
<parameter_description> a #JsonNodeType
</parameter_description>
</parameter>
</parameters>
<return> the newly created #JsonNode
</return>
</function>

<function name="clutter_behaviour_bspline_clear">
<description>
Empties a bspline.

Since: 0.4

</description>
<parameters>
<parameter name="bs">
<parameter_description>      a #ClutterBehaviourBspline
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_ramp_inc_func">
<description>
Convenience alpha function for a monotonic increasing ramp. You
can use this function as the alpha function for clutter_alpha_set_func().


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="dummy">
<parameter_description> unused argument
</parameter_description>
</parameter>
</parameters>
<return> an alpha value.

Since: 0.2
</return>
</function>

<function name="json_array_unref">
<description>
Decreases by one the reference count of a #JsonArray. If the
reference count reaches zero, the array is destroyed and all
its allocated resources are freed.

</description>
<parameters>
<parameter name="array">
<parameter_description> a #JsonArray
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_exp_inc_func">
<description>
Convenience alpha function for a 2^x curve. You can use this function as the
alpha function for clutter_alpha_set_func().


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="dummy">
<parameter_description> unused argument
</parameter_description>
</parameter>
</parameters>
<return> an alpha value.

Since: 0.4
</return>
</function>

<function name="clutter_actor_get_rxangx">
<description>
Gets the angle of rotation around the X axis.


</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> the angle or rotation, as a fixed point value

Since: 0.4
</return>
</function>

<function name="clutter_behaviour_ellipse_get_direction">
<description>
Retrieves the #ClutterRotateDirection used by the ellipse behaviour.


</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
</parameters>
<return> the rotation direction

Since: 0.4
</return>
</function>

<function name="clutter_init_with_args">
<description>
This function does the same work as clutter_init(). Additionally,
it allows you to add your own command line options, and it
automatically generates nicely formatted &amp;lt;option&amp;gt;--help&amp;lt;/option&amp;gt;
output. Note that your program will be terminated after writing
out the help output. Also note that, in case of error, the
error message will be placed inside @error instead of being
printed on the display.


</description>
<parameters>
<parameter name="argc">
<parameter_description> a pointer to the number of command line arguments
</parameter_description>
</parameter>
<parameter name="argv">
<parameter_description> a pointer to the array of comman line arguments
</parameter_description>
</parameter>
<parameter name="parameter_string">
<parameter_description> a string which is displayed in the
first line of &amp;lt;option&amp;gt;--help&amp;lt;/option&amp;gt; output, after
&amp;lt;literal&amp;gt;&amp;lt;replaceable&amp;gt;programname&amp;lt;/replaceable&amp;gt; [OPTION...]&amp;lt;/literal&amp;gt;
</parameter_description>
</parameter>
<parameter name="entries">
<parameter_description> a %NULL terminated array of #GOptionEntry&amp;lt;!-- --&amp;gt;s
describing the options of your program
</parameter_description>
</parameter>
<parameter name="translation_domain">
<parameter_description> a translation domain to use for translating
the &amp;lt;option&amp;gt;--help&amp;lt;/option&amp;gt; output for the options in @entries
with gettext(), or %NULL
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> a return location for a #GError
</parameter_description>
</parameter>
</parameters>
<return> %CLUTTER_INIT_SUCCESS if Clutter has been successfully
initialised, or other values or #ClutterInitError in case of
error.

Since: 0.2
</return>
</function>

<function name="clutter_color_parse">
<description>
Parses a string definition of a color, filling the
&amp;lt;structfield&amp;gt;red&amp;lt;/structfield&amp;gt;, &amp;lt;structfield&amp;gt;green&amp;lt;/structfield&amp;gt;, 
&amp;lt;structfield&amp;gt;blue&amp;lt;/structfield&amp;gt; and &amp;lt;structfield&amp;gt;alpha&amp;lt;/structfield&amp;gt; 
channels of @dest. If alpha is not specified it will be set full opaque.
The color in @dest is not allocated.

The color may be defined by any of the formats understood by
&amp;lt;function&amp;gt;pango_color_parse&amp;lt;/function&amp;gt;; these include literal color
names, like &amp;lt;literal&amp;gt;Red&amp;lt;/literal&amp;gt; or &amp;lt;literal&amp;gt;DarkSlateGray&amp;lt;/literal&amp;gt;,
or hexadecimal specifications like &amp;lt;literal&amp;gt;&amp;num;3050b2&amp;lt;/literal&amp;gt; or
&amp;lt;literal&amp;gt;&amp;num;333&amp;lt;/literal&amp;gt;.


</description>
<parameters>
<parameter name="color">
<parameter_description> a string specifiying a color (named color or #RRGGBBAA)
</parameter_description>
</parameter>
<parameter name="dest">
<parameter_description> return location for a #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if parsing succeeded.

Since: 0.2
</return>
</function>

<function name="clutter_behaviour_remove">
<description>
Removes @actor from the list of #ClutterActor&amp;lt;!-- --&amp;gt;s to which
@behave applies.  This function removes a reference on the actor.

Since: 0.2

</description>
<parameters>
<parameter name="behave">
<parameter_description> a #ClutterBehaviour
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_unrealize">
<description>
Frees up any underlying graphics resources needed by the actor to be
displayed.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_util_next_p2">
<description>
Calculates the next power greater than @a.


</description>
<parameters>
<parameter name="a">
<parameter_description> Value to get the next power
</parameter_description>
</parameter>
</parameters>
<return> The next power after @a.
</return>
</function>

<function name="clutter_entry_get_position">
<description>
Gets the position, in characters, of the cursor in @entry.


</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
</parameters>
<return> the position of the cursor.

Since: 0.4
</return>
</function>

<function name="clutter_behaviour_apply">
<description>
Applies @behave to @actor.  This function adds a reference on
the actor.

Since: 0.2

</description>
<parameters>
<parameter name="behave">
<parameter_description> a #ClutterBehaviour
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_rotate_xx">
<description>
Rotates actor around the X axis.

</description>
<parameters>
<parameter name="self">
<parameter_description>  A #ClutterActor
</parameter_description>
</parameter>
<parameter name="angle">
<parameter_description> Angle of rotation
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description>     Y co-ord to rotate actor around ( relative to actor position )
</parameter_description>
</parameter>
<parameter name="z">
<parameter_description>     Z co-ord to rotate actor around ( relative to actor position )
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_label_get_font_name">
<description>
Retrieves the font used by @label.


</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
</parameters>
<return> a string containing the font name, in a format
understandable by pango_font_description_from_string().  The
string is owned by #ClutterLabel and should not be modified
or freed.
</return>
</function>

<function name="clutter_score_set_loop">
<description>
Sets whether @score should loop.

</description>
<parameters>
<parameter name="score">
<parameter_description> a #ClutterScore
</parameter_description>
</parameter>
<parameter name="loop">
<parameter_description> %TRUE for enable looping
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_get_name">
<description>
Retrieves the name of @self.


</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> pointer to textual tag for the actor.  The
returned string is owned by the actor and should not
be modified or freed.
</return>
</function>

<function name="clutter_script_get_object">
<description>
Retrieves the object bound to @name. This function does not increment
the reference count of the returned object.


</description>
<parameters>
<parameter name="script">
<parameter_description> a #ClutterScript
</parameter_description>
</parameter>
<parameter name="name">
<parameter_description> the name of the object to retrieve
</parameter_description>
</parameter>
</parameters>
<return> the named object, or %NULL if no object with the
given name was available

Since: 0.6
</return>
</function>

<function name="clutter_sini">
<description>
Very fast fixed point implementation of sine function.

ClutterAngle is an integer such that 1024 represents
full circle.


</description>
<parameters>
<parameter name="angle">
<parameter_description> a #ClutterAngle
</parameter_description>
</parameter>
</parameters>
<return> #ClutterFixed sine value.

Since: 0.2
</return>
</function>

<function name="clutter_behaviour_ellipse_newx">
<description>
Creates a behaviour that drives actors along an elliptical path. This
is the fixed point variant of clutter_behaviour_ellipse_new().


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha, or %NULL
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> x coordinace of the center
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> y coordiance of the center
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> width of the ellipse
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> height of the ellipse
</parameter_description>
</parameter>
<parameter name="direction">
<parameter_description> #ClutterRotateDirection of rotation
</parameter_description>
</parameter>
<parameter name="begin">
<parameter_description> #ClutterFixed angle in degrees at which movement begins
</parameter_description>
</parameter>
<parameter name="end">
<parameter_description> #ClutterFixed angle in degrees at which movement ends
</parameter_description>
</parameter>
</parameters>
<return> the newly created #ClutterBehaviourEllipse

Since: 0.4
</return>
</function>

<function name="clutter_timeline_start">
<description>
Starts the #ClutterTimeline playing.

</description>
<parameters>
<parameter name="timeline">
<parameter_description> A #ClutterTimeline
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_rotate_get_boundsx">
<description>
Retrieves the rotation boundaries of the rotate behaviour. This is
the fixed point notation version of clutter_behaviour_rotate_get_bounds().

Since: 0.4

</description>
<parameters>
<parameter name="rotate">
<parameter_description> a #ClutterBehaviourRotate
</parameter_description>
</parameter>
<parameter name="angle_begin">
<parameter_description> return value for the initial angle
</parameter_description>
</parameter>
<parameter name="angle_end">
<parameter_description> return value for the final angle
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_timeline_get_current_frame">
<description>
Request the current frame number of the timeline.


</description>
<parameters>
<parameter name="timeline">
<parameter_description> A #ClutterTimeline
</parameter_description>
</parameter>
</parameters>
<return> current frame number
</return>
</function>

<function name="ClutterBehaviourDepth">
<description>
End depth level to apply to the actors.

Since: 0.4

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_ellipse_new">
<description>
Creates a behaviour that drives actors along an elliptical path with
given center, width and height; the movement begins at @angle_begin
degrees (with 0 corresponding to 12 o&apos;clock) and ends at @angle_end degrees;

</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha, or %NULL
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> x coordinace of the center
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> y coordiance of the center
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> width of the ellipse
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> height of the ellipse
</parameter_description>
</parameter>
<parameter name="direction">
<parameter_description> #ClutterRotateDirection of rotation
</parameter_description>
</parameter>
<parameter name="begin">
<parameter_description> angle in degrees at which movement begins
</parameter_description>
</parameter>
<parameter name="end">
<parameter_description> angle in degrees at which movement ends
</parameter_description>
</parameter>
</parameters>
<return> the newly created #ClutterBehaviourEllipse

Since: 0.4
</return>
</function>

<function name="json_array_get_elements">
<description>
Gets the elements of a #JsonArray as a list of #JsonNode&amp;lt;!-- --&amp;gt;s.


</description>
<parameters>
<parameter name="array">
<parameter_description> a #JsonArray
</parameter_description>
</parameter>
</parameters>
<return> a #GList containing the elements of the array. The
contents of the list are owned by the array and should never be
modified or freed. Use g_list_free() on the returned list when
done using it
</return>
</function>

<function name="clutter_entry_set_visible_cursor">
<description>
Sets the visibility of the input cursor.

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
<parameter name="visible">
<parameter_description> whether the input cursor should be visible
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_ellipse_set_tilt">
<description>
Sets the angles at which the ellipse should be tilted around it&apos;s center.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="angle_tilt_x">
<parameter_description> tilt of the elipse around the center in X axis in degrees.
</parameter_description>
</parameter>
<parameter name="angle_tilt_y">
<parameter_description> tilt of the elipse around the center in Y axis in degrees.
</parameter_description>
</parameter>
<parameter name="angle_tilt_z">
<parameter_description> tilt of the elipse around the center in Z axis in degrees.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="_pango_clutter_font_map_get_renderer">
<description>
Gets the singleton PangoClutterRenderer for this fontmap.


</description>
<parameters>
<parameter name="fontmap">
<parameter_description> a #PangoClutterFontmap
</parameter_description>
</parameter>
</parameters>
<return> 
</return>
</function>

<function name="clutter_layout_get_layout_flags">
<description>
Retrieves the supported layout types from the #ClutterLayout


</description>
<parameters>
<parameter name="layout">
<parameter_description> a #ClutterLayout
</parameter_description>
</parameter>
</parameters>
<return> bitwise or of #ClutterLayoutFlags

Since: 0.4
</return>
</function>

<function name="clutter_sine_inc_func">
<description>
Convenience alpha function for a sine wave over interval [0, pi / 2].
You can use this function as the alpha function for
clutter_alpha_set_func().


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="dummy">
<parameter_description> unused argument
</parameter_description>
</parameter>
</parameters>
<return> an alpha value.

Since: 0.2
</return>
</function>

<function name="clutter_group_get_n_children">
<description>
Gets the number of actors held in the group.


</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterGroup
</parameter_description>
</parameter>
</parameters>
<return> The number of child actors held in the group.

Since: 0.2
</return>
</function>

<function name="clutter_behaviour_rotate_set_boundsx">
<description>
Fixed point version of clutter_behaviour_rotate_set_bounds().

Since: 0.4

</description>
<parameters>
<parameter name="rotate">
<parameter_description> a #ClutterBehaviourRotate
</parameter_description>
</parameter>
<parameter name="angle_begin">
<parameter_description> initial angle, in fixed point notation
</parameter_description>
</parameter>
<parameter name="angle_end">
<parameter_description> final angle, in fixed point notation
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_group_sort_depth_order">
<description>
Sorts a #ClutterGroup&apos;s children by there depth value.
This function should not be used by applications.

Deprecated: 0.6: Use clutter_container_sort_depth_order() instead.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterGroup
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_eglx_get_default_screen">
<description>
FIXME


</description>
<parameters>
</parameters>
<return> FIXME

Since: 0.4
</return>
</function>

<function name="json_node_set_double">
<description>
Sets @value as the double content of the @node, replacing any existing
content.

</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode of type %JSON_NODE_VALUE
</parameter_description>
</parameter>
<parameter name="value">
<parameter_description> a double value
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_entry_get_visibility">
<description>
Return value: TRUE if the contents of the entry are displayed as plaintext.

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
</parameters>
<return> TRUE if the contents of the entry are displayed as plaintext.

Since: 0.4
</return>
</function>

<function name="clutter_container_add_actor">
<description>
Adds a #ClutterActor to @container. This function will emit the
&quot;actor-added&quot; signal is emitted. The actor should be parented to
@container. You cannot add a #ClutterActor to more than one
#ClutterContainer.

Since: 0.4

</description>
<parameters>
<parameter name="container">
<parameter_description> a #ClutterContainer
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> the first #ClutterActor to add
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_color_shadex">
<description>
Fixed point version of clutter_color_shade().

Shades @src by the factor of @shade and saves the modified
color into @dest.

Since: 0.2

</description>
<parameters>
<parameter name="src">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
<parameter name="dest">
<parameter_description> return location for the shaded color
</parameter_description>
</parameter>
<parameter name="shade">
<parameter_description> #ClutterFixed the shade factor to apply
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_rotate_get_bounds">
<description>
Retrieves the rotation boundaries of the rotate behaviour.

Since: 0.4

</description>
<parameters>
<parameter name="rotate">
<parameter_description> a #ClutterBehaviourRotate
</parameter_description>
</parameter>
<parameter name="angle_begin">
<parameter_description> return value for the initial angle
</parameter_description>
</parameter>
<parameter name="angle_end">
<parameter_description> return value for the final angle
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_timeline_get_loop">
<description>
Gets whether @timeline is looping


</description>
<parameters>
<parameter name="timeline">
<parameter_description> a #ClutterTimeline
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the timeline is looping
</return>
</function>

<function name="clutter_sine_func">
<description>
Convenience alpha function for a sine wave. You can use this
function as the alpha function for clutter_alpha_set_func().


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="dummy">
<parameter_description> unused argument
</parameter_description>
</parameter>
</parameters>
<return> an alpha value.

Since: 0.2
</return>
</function>

<function name="clutter_behaviour_ellipse_set_angle_endx">
<description>
Sets the angle at which movement ends.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="angle_end">
<parameter_description> #ClutterAngle at which movement ends
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_object_add_member">
<description>
Adds a member named @member_name and containing @node into a #JsonObject.
The object will take ownership of the #JsonNode.

</description>
<parameters>
<parameter name="object">
<parameter_description> a #JsonObject
</parameter_description>
</parameter>
<parameter name="member_name">
<parameter_description> the name of the member
</parameter_description>
</parameter>
<parameter name="node">
<parameter_description> the value of the member
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_node_get_boolean">
<description>
Gets the boolean value stored inside a #JsonNode


</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode of type %JSON_NODE_VALUE
</parameter_description>
</parameter>
</parameters>
<return> a boolean value.
</return>
</function>

<function name="clutter_redraw">
<description>
Forces a redraw of the entire stage. Applications should never use this
function, but queue a redraw using clutter_actor_queue_redraw().

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="ClutterBehaviourScale">
<description>
The gravity of the scaling.

Since: 0.2

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_actor_raise_top">
<description>
Raises @self to the top.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_score_stop">
<description>
Stops and rewinds a playing #ClutterScore instance.


</description>
<parameters>
<parameter name="score">
<parameter_description> A #ClutterScore
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="JsonParser">
<description>
The ::error signal is emitted each time a #JsonParser encounters
an error in a JSON stream.

</description>
<parameters>
<parameter name="parser">
<parameter_description> the parser instance that received the signal
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> a pointer to the #GError
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_timeline_is_playing">
<description>
Query state of a #ClutterTimeline instance.


</description>
<parameters>
<parameter name="timeline">
<parameter_description> A #ClutterTimeline
</parameter_description>
</parameter>
</parameters>
<return> TRUE if timeline is currently playing, FALSE if not.
</return>
</function>

<function name="clutter_texture_bind_tile">
<description>
Proxys a call to glBindTexture a to bind an internal &apos;tile&apos;.

This function is only useful for sub class implementations
and never should be called by an application.

</description>
<parameters>
<parameter name="texture">
<parameter_description> A #ClutterTexture
</parameter_description>
</parameter>
<parameter name="index_">
<parameter_description> Tile index to bind
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_bspline_get_origin">
<description>
Gets the origin of the bezier.

Since: 0.4

</description>
<parameters>
<parameter name="bs">
<parameter_description>   a #ClutterBehaviourBspline
</parameter_description>
</parameter>
<parameter name="knot">
<parameter_description> a #ClutterKnot where to store the origin of the bezier
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_stage_get_color">
<description>
Retrieves the stage color.

</description>
<parameters>
<parameter name="stage">
<parameter_description> A #ClutterStage
</parameter_description>
</parameter>
<parameter name="color">
<parameter_description> return location for a #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_path_append_knots">
<description>
Adds a NULL-terminated list of knots to a path.  This function is
equivalent to calling clutter_behaviour_path_append_knot() for each 
member of the list.

Since: 0.2

</description>
<parameters>
<parameter name="pathb">
<parameter_description> a #ClutterBehvaiourPath
</parameter_description>
</parameter>
<parameter name="first_knot">
<parameter_description> the #ClutterKnot knot to add to the path
</parameter_description>
</parameter>
<parameter name="Varargs">
<parameter_description> additional knots to add to the path
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_get_vertices">
<description>
Calculates the tranformed screen coordinaces of the four corners of
the actor; the returned vertices relate to the ClutterActoBox
coordinances as follows:

v[0] contains (x1, y1)
v[1] contains (x2, y1)
v[2] contains (x1, y2)
v[3] contains (x2, y2)

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="verts">
<parameter_description> Pointer to a location of an array of 4 #ClutterVertex where to
store the result.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_eglx_trap_x_errors">
<description>
FIXME

Since: 0.4

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_label_get_color">
<description>
Retrieves the color of @label.

</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
<parameter name="color">
<parameter_description> return location for a #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_get_x">
<description>
Retrieves the actors x position relative to any parent.


</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> The actor x position in pixels ignoring any tranforms
(i.e scaling, rotation).
</return>
</function>

<function name="clutter_actor_get_y">
<description>
Retrieves the actors y position relative to any parent.


</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> The actor y position in pixels ignoring any tranforms
(i.e scaling, rotation).
</return>
</function>

<function name="clutter_entry_get_layout">
<description>
Gets the #PangoLayout used to display the entry.
The layout is useful to e.g. convert text positions to
pixel positions.
The returned layout is owned by the entry so need not be
freed by the caller.


</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
</parameters>
<return> the #PangoLayout for this entry

Since: 0.4
</return>
</function>

<function name="clutter_actor_apply_transform_to_point">
<description>
Transforms point in coordinates relative to the actor
into screen coordiances with the current actor tranform
(i.e. scale, rotation etc)

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="point">
<parameter_description> A point as #ClutterVertex
</parameter_description>
</parameter>
<parameter name="vertex">
<parameter_description> The translated #ClutterVertex
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_array_new">
<description>
Creates a new #JsonArray.


</description>
<parameters>
</parameters>
<return> the newly created #JsonArray
</return>
</function>

<function name="clutter_color_from_hls">
<description>
Converts a color expressed in HLS (hue, luminance and saturation)
values into a #ClutterColor.

</description>
<parameters>
<parameter name="dest">
<parameter_description> return location for a #ClutterColor
</parameter_description>
</parameter>
<parameter name="hue">
<parameter_description> hue value (0 .. 255)
</parameter_description>
</parameter>
<parameter name="luminance">
<parameter_description> luminance value (0 .. 255)
</parameter_description>
</parameter>
<parameter name="saturation">
<parameter_description> saturation value (0 .. 255)
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_set_name">
<description>
Sets a textual tag to the actor.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="name">
<parameter_description> Textual tag to apply to actor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_entry_new_full">
<description>
Creates a new #ClutterEntry displaying @text with color @color
using @font_name.


</description>
<parameters>
<parameter name="font_name">
<parameter_description> the name (and size) of the font to be used
</parameter_description>
</parameter>
<parameter name="text">
<parameter_description> the text to be displayed
</parameter_description>
</parameter>
<parameter name="color">
<parameter_description> #ClutterColor for text
</parameter_description>
</parameter>
</parameters>
<return> the newly created #ClutterEntry

Since: 0.4
</return>
</function>

<function name="clutter_eglx_untrap_x_errors">
<description>
FIXME


</description>
<parameters>
</parameters>
<return> FIXME

Since: 0.4
</return>
</function>

<function name="clutter_actor_get_scale">
<description>
Retrieves an actors scale in floating point.

Since: 0.2

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="scale_x">
<parameter_description> Location to store horizonal float scale factor if non NULL.
</parameter_description>
</parameter>
<parameter name="scale_y">
<parameter_description> Location to store vertical float scale factor if non NULL.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_destroy">
<description>
Destroys an actor.  When an actor is destroyed, it will break any
references it holds to other objects.  If the actor is inside a
container, the actor will be removed.

When you destroy a container its children will be destroyed as well.

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_bspline_truncate">
<description>
Truncates the bezier spline at the control point; if the control point at
offset is not one of the on-curve points, the bspline will be
truncated at the nearest preceeding on-curve point.

Since: 0.4

</description>
<parameters>
<parameter name="bs">
<parameter_description>      a #ClutterBehaviourBspline
</parameter_description>
</parameter>
<parameter name="offset">
<parameter_description>  offset of control where the bspline should be truncated  
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="ClutterStage">
<description>
The ::activate signal is emitted when the stage loses key focus
from the underlying window system.

Since: 0.6

</description>
<parameters>
<parameter name="stage">
<parameter_description> the stage which was deactivated
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_object_get_members">
<description>
Retrieves all the names of the members of a #JsonObject. You can
obtain the value for each member using json_object_get_member().


</description>
<parameters>
<parameter name="object">
<parameter_description> a #JsonObject
</parameter_description>
</parameter>
</parameters>
<return> a #GList of member names. The content of the list
is owned by the #JsonObject and should never be modified or
freed. When you have finished using the returned list, use
g_list_free() to free the resources it has allocated.
</return>
</function>

<function name="clutter_box_get_color">
<description>
Gets the background color of the box set with clutter_box_set_color().

Since: 0.4

</description>
<parameters>
<parameter name="box">
<parameter_description> a #ClutterBox
</parameter_description>
</parameter>
<parameter name="color">
<parameter_description> return location for the color
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_stage_event">
<description>
This function is used to emit an event on the main stage.
You should rarely need to use this function, except for
synthetising events.


</description>
<parameters>
<parameter name="stage">
<parameter_description> a #ClutterStage
</parameter_description>
</parameter>
<parameter name="event">
<parameter_description> a #ClutterEvent
</parameter_description>
</parameter>
</parameters>
<return> the return value from the signal emission

Since: 0.4
</return>
</function>

<function name="clutter_label_get_text">
<description>
Retrieves the text displayed by @label


</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
</parameters>
<return> the text of the label.  The returned string is
owned by #ClutterLabel and should not be modified or freed.
</return>
</function>

<function name="clutter_eglx_set_stage_foreign">
<description>
FIXME

Since: 0.4

</description>
<parameters>
<parameter name="stage">
<parameter_description> a #ClutterStage
</parameter_description>
</parameter>
<parameter name="window">
<parameter_description> FIXME
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_exp_dec_func">
<description>
Convenience alpha function for a decreasing 2^x curve. You can use this
function as the alpha function for clutter_alpha_set_func().


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="dummy">
<parameter_description> unused argument
</parameter_description>
</parameter>
</parameters>
<return> an alpha value.

Since: 0.4
</return>
</function>

<function name="clutter_behaviour_rotate_set_bounds">
<description>
Sets the initial and final angles of a rotation behaviour.

Since: 0.4

</description>
<parameters>
<parameter name="rotate">
<parameter_description> a #ClutterBehaviourRotate
</parameter_description>
</parameter>
<parameter name="angle_begin">
<parameter_description> initial angle
</parameter_description>
</parameter>
<parameter name="angle_end">
<parameter_description> final angle
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_tani">
<description>
Very fast fixed point implementation of tan function.

ClutterAngle is an integer such that 1024 represents
full circle.


</description>
<parameters>
<parameter name="angle">
<parameter_description> a #ClutterAngle
</parameter_description>
</parameter>
</parameters>
<return> #ClutterFixed sine value.

Since: 0.3
</return>
</function>

<function name="ClutterMedia">
<description>
The ::error signal is emitted each time an error occurred.

Since: 0.2

</description>
<parameters>
<parameter name="media">
<parameter_description> the #ClutterMedia instance that received the signal
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> the #GError
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_group_find_child_by_id">
<description>
Finds a child actor of a group by its unique ID. Search recurses
into any child groups.


</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterGroup
</parameter_description>
</parameter>
<parameter name="id">
<parameter_description> A unique #Clutteractor ID
</parameter_description>
</parameter>
</parameters>
<return> the #ClutterActor if found, or NULL.

Deprecated: 0.6: Use clutter_container_find_child_by_id() instead.
</return>
</function>

<function name="clutter_actor_request_coords">
<description>
Requests new untransformed co-ordinates for the #ClutterActor
ralative to any parent.

This function should not be called directly by applications instead
the various position/geometry methods should be used.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="box">
<parameter_description> A #ClutterActorBox with requested new co-ordinates in ClutterUnits
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_script_get_objects">
<description>
Retrieves a list of objects for the given names. This function does
not increment the reference count of the returned objects.


</description>
<parameters>
<parameter name="script">
<parameter_description> a #ClutterScript
</parameter_description>
</parameter>
<parameter name="first_name">
<parameter_description> the name of the first object to retrieve
</parameter_description>
</parameter>
<parameter name="Varargs">
<parameter_description> a %NULL-terminated list of names
</parameter_description>
</parameter>
</parameters>
<return> a newly allocated #GList containing the found objects,
or %NULL. Use g_list_free() when done using it.

Since: 0.6
</return>
</function>

<function name="json_node_get_int">
<description>
Gets the integer value stored inside a #JsonNode


</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode of type %JSON_NODE_VALUE
</parameter_description>
</parameter>
</parameters>
<return> an integer value.
</return>
</function>

<function name="clutter_entry_set_color">
<description>
Sets the color of @entry.

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
<parameter name="color">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_ellipse_set_center">
<description>
Sets the center of the elliptical path to the point represented by knot.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> x coordinace of centre
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> y coordinace of centre
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_powx">
<description>
Calculates x to y power. (Note, if x is a constant it will be faster to
calculate the power as clutter_pow2x (CLUTTER_FIXED_MUL(y, log2 (x)))


</description>
<parameters>
<parameter name="x">
<parameter_description> base
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> #ClutterFixed exponent
</parameter_description>
</parameter>
</parameters>
<return> x in y power.

Since: 0.4
</return>
</function>

<function name="clutter_actor_is_reactive">
<description>
Checks whether @actor is marked as reactive.


</description>
<parameters>
<parameter name="actor">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the actor is reactive

Since: 0.6
</return>
</function>

<function name="clutter_box_set_color">
<description>
Sets the background color of the box.

Since: 0.4

</description>
<parameters>
<parameter name="box">
<parameter_description> a #ClutterBox
</parameter_description>
</parameter>
<parameter name="color">
<parameter_description> the background color of the box
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_entry_get_alignment">
<description>
Return value: The entrys #PangoAlignment

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
</parameters>
<return> The entrys #PangoAlignment

Since 0.4
</return>
</function>

<function name="clutter_layout_width_for_height">
<description>
Queries a #ClutterLayout actor for its width with a known height.

Since: 0.4

</description>
<parameters>
<parameter name="layout">
<parameter_description> a #ClutterLayout
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> return location for the width
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> height allocated by the parent
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_ramp_func">
<description>
Convenience alpha function for a full ramp function (increase for
half the time, decrease for the remaining half). You can use this
function as the alpha function for clutter_alpha_set_func().


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="dummy">
<parameter_description> unused argument
</parameter_description>
</parameter>
</parameters>
<return> an alpha value.

Since: 0.2
</return>
</function>

<function name="clutter_behaviour_rotate_get_axis">
<description>
Retrieves the #ClutterRotateAxis used by the rotate behaviour.


</description>
<parameters>
<parameter name="rotate">
<parameter_description> a #ClutterBehaviourRotate
</parameter_description>
</parameter>
</parameters>
<return> the rotation axis

Since: 0.4
</return>
</function>

<function name="clutter_behaviour_ellipse_set_tiltx">
<description>
Sets the angle at which the ellipse should be tilted around it&apos;s center.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="angle_tilt_x">
<parameter_description> #ClutterAngle tilt of the elipse around the center in X axis
</parameter_description>
</parameter>
<parameter name="angle_tilt_y">
<parameter_description> #ClutterAngle tilt of the elipse around the center in Y axis
</parameter_description>
</parameter>
<parameter name="angle_tilt_z">
<parameter_description> #ClutterAngle tilt of the elipse around the center in Z axis
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_rectangle_new_with_color">
<description>
Creates a new #ClutterActor with a rectangular shape
and with @color.


</description>
<parameters>
<parameter name="color">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return> a new #ClutterActor
</return>
</function>

<function name="clutter_label_get_line_wrap_mode">
<description>
Return value: %TRUE if the lines of the label are automatically wrapped.

</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the lines of the label are automatically wrapped.

Since: 0.2
</return>
</function>

<function name="clutter_container_remove">
<description>
Removes a %NULL terminated list of #ClutterActor&amp;lt;!-- --&amp;gt;s from
@container. Each actor should be unparented, so if you want to keep it
around you must hold a reference to it yourself, using g_object_ref().
Each time an actor is removed, the &quot;actor-removed&quot; signal is
emitted by @container.

Since: 0.4

</description>
<parameters>
<parameter name="container">
<parameter_description> a #ClutterContainer
</parameter_description>
</parameter>
<parameter name="first_actor">
<parameter_description> first #ClutterActor to remove
</parameter_description>
</parameter>
<parameter name="Varargs">
<parameter_description> a %NULL-terminated list of actors to remove
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_entry_set_visibility">
<description>
Sets whether the contents of the entry are visible or not. When visibility
is set to FALSE, characters are displayed as the invisible char, and will
also appear that way when the text in the entry widget is copied elsewhere.

The default invisible char is the asterisk &apos;*&apos;, but it can be changed with
#clutter_entry_set_invisible_char().

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
<parameter name="visible">
<parameter_description> TRUE if the contents of the entry are displayed as plaintext.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_node_set_object">
<description>
Sets @objects inside @node. The reference count of @object is increased.

</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
<parameter name="object">
<parameter_description> a #JsonObject
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_rotate_set_center">
<description>
Sets the center of rotation. The coordinates are relative to the plane
normal to the rotation axis set with clutter_behaviour_rotate_set_axis().

Since: 0.4

</description>
<parameters>
<parameter name="rotate">
<parameter_description> a #ClutterBehaviourRotate
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> X axis center of rotation
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> Y axis center of rotation
</parameter_description>
</parameter>
<parameter name="z">
<parameter_description> Z axis center of rotation
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_rotate_new">
<description>
Creates a new #ClutterBehaviourRotate. This behaviour will rotate actors
bound to it on @axis, following @direction, between @angle_begin and
@angle_end.


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha, or %NULL
</parameter_description>
</parameter>
<parameter name="axis">
<parameter_description> the rotation axis
</parameter_description>
</parameter>
<parameter name="direction">
<parameter_description> the rotation direction
</parameter_description>
</parameter>
<parameter name="angle_begin">
<parameter_description> the starting angle
</parameter_description>
</parameter>
<parameter name="angle_end">
<parameter_description> the final angle
</parameter_description>
</parameter>
</parameters>
<return> the newly created #ClutterBehaviourRotate.

Since: 0.4
</return>
</function>

<function name="clutter_behaviour_path_append_knot">
<description>
Appends a #ClutterKnot to the path

Since: 0.2

</description>
<parameters>
<parameter name="pathb">
<parameter_description> a #ClutterBehvaiourPath
</parameter_description>
</parameter>
<parameter name="knot">
<parameter_description>  a #ClutterKnot to append.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_label_get_layout">
<description>
Gets the #PangoLayout used to display the label.
The layout is useful to e.g. convert text positions to
pixel positions.
The returned layout is owned by the label so need not be
freed by the caller.


</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
</parameters>
<return> the #PangoLayout for this label

Since: 0.2
</return>
</function>

<function name="clutter_actor_set_reactive">
<description>
Sets @actor as reactive. Reactive actors will receive events.

Since: 0.6

</description>
<parameters>
<parameter name="actor">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_array_get_length">
<description>
Retrieves the length of a #JsonArray


</description>
<parameters>
<parameter name="array">
<parameter_description> a #JsonArray
</parameter_description>
</parameter>
</parameters>
<return> the length of the array
</return>
</function>

<function name="clutter_eglx_get_default_root_window">
<description>
FIXME


</description>
<parameters>
</parameters>
<return> FIXME

Since: 0.4
</return>
</function>

<function name="clutter_behaviour_path_insert_knot">
<description>
Inserts a #ClutterKnot in the path at specified position. Values greater
than total number of knots will append the knot at the end of path.

Since: 0.2

</description>
<parameters>
<parameter name="pathb">
<parameter_description> a #ClutterBehvaiourPath
</parameter_description>
</parameter>
<parameter name="offset">
<parameter_description> position in path to insert knot. 
</parameter_description>
</parameter>
<parameter name="knot">
<parameter_description>  a #ClutterKnot to append.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_bspline_append_knot">
<description>
Appends a #ClutterKnot control point to the bezier spline bs. Note, that
since a bezier is defined by 4 control points, the point gets stored in
a temporary chache, and only when there are enough control points to
create a new bezier curve will the bspline extended.

Since: 0.4

</description>
<parameters>
<parameter name="bs">
<parameter_description>      a #ClutterBehaviourBspline
</parameter_description>
</parameter>
<parameter name="knot">
<parameter_description>    a #ClutterKnot control point to append.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_timeline_get_n_frames">
<description>
Request the total number of frames for the #ClutterTimeline.


</description>
<parameters>
<parameter name="timeline">
<parameter_description> A #ClutterTimeline
</parameter_description>
</parameter>
</parameters>
<return> Number of frames for this #ClutterTimeline.
</return>
</function>

<function name="clutter_keysym_to_unicode">
<description>
Convert from a Clutter key symbol to the corresponding ISO10646 (Unicode)
character.


</description>
<parameters>
<parameter name="keyval">
<parameter_description> a clutter key symbol 
</parameter_description>
</parameter>
</parameters>
<return> the corresponding unicode character, or 0 if there
is no corresponding character.
</return>
</function>

<function name="clutter_threads_add_idle_full">
<description>
Adds a function to be called whenever there are no higher priority
events pending.  If the function returns %FALSE it is automatically
removed from the list of event sources and will not be called again.

This variant of g_idle_add_full() calls @function with the Clutter lock
held. It can be thought of a MT-safe version for Clutter actors for the 
following use case, where you have to worry about idle_callback()
running in thread A and accessing @self after it has been finalized
in thread B:

&amp;lt;informalexample&amp;gt;&amp;lt;programlisting&amp;gt;
static gboolean
idle_callback (gpointer data)
{
// clutter_threads_enter(); would be needed for g_idle_add()

SomeActor *self = data;
/&amp;lt;!-- --&amp;gt;* do stuff with self *&amp;lt;!-- --&amp;gt;/

self-&amp;gt;idle_id = 0;

// clutter_threads_leave(); would be needed for g_idle_add()
return FALSE;
}
static void
some_actor_do_stuff_later (SomeActor *self)
{
self-&amp;gt;idle_id = clutter_threads_add_idle (idle_callback, self)
// using g_idle_add() here would require thread protection in the callback
}

static void
some_actor_finalize (GObject *object)
{
SomeActor *self = SOME_ACTOR (object);
if (self-&amp;gt;idle_id)
g_source_remove (self-&amp;gt;idle_id);
G_OBJECT_CLASS (parent_class)-&amp;gt;finalize (object);
}
&amp;lt;/programlisting&amp;gt;&amp;lt;/informalexample&amp;gt;


</description>
<parameters>
<parameter name="priority">
<parameter_description> the priority of the timeout source. Typically this will be in the
range between #G_PRIORITY_DEFAULT_IDLE and #G_PRIORITY_HIGH_IDLE
</parameter_description>
</parameter>
<parameter name="func">
<parameter_description> function to call
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> data to pass to the function
</parameter_description>
</parameter>
<parameter name="notify">
<parameter_description> functio to call when the idle source is removed
</parameter_description>
</parameter>
</parameters>
<return> the ID (greater than 0) of the event source.

Since: 0.4
</return>
</function>

<function name="clutter_container_get_children">
<description>
Retrieves all the children of @container.


</description>
<parameters>
<parameter name="container">
<parameter_description> a #ClutterContainer
</parameter_description>
</parameter>
</parameters>
<return> a list of #ClutterActor&amp;lt;!-- --&amp;gt;s. Use g_list_free()
on the returned list when done.

Since: 0.4
</return>
</function>

<function name="json_object_has_member">
<description>
Checks whether @object has a member named @member_name.


</description>
<parameters>
<parameter name="object">
<parameter_description> a #JsonObject
</parameter_description>
</parameter>
<parameter name="member_name">
<parameter_description> the name of a JSON object member
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the JSON object has the requested member
</return>
</function>

<function name="clutter_get_option_group">
<description>
Return value: a GOptionGroup for the commandline arguments

</description>
<parameters>
</parameters>
<return> a GOptionGroup for the commandline arguments
recognized by Clutter

Since: 0.2
</return>
</function>

<function name="clutter_entry_set_alignment">
<description>
Sets text alignment of the entry.

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
<parameter name="alignment">
<parameter_description> A #PangoAlignment
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_color_to_hls">
<description>
Converts @src to the HLS format. Returned HLS values are from interval
0 .. 255.

</description>
<parameters>
<parameter name="src">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
<parameter name="hue">
<parameter_description> return location for the hue value or %NULL
</parameter_description>
</parameter>
<parameter name="luminance">
<parameter_description> return location for the luminance value or %NULL
</parameter_description>
</parameter>
<parameter name="saturation">
<parameter_description> return location for the saturation value or %NULL
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="ClutterBox">
<description>
The background color of a #ClutterBox.

Since: 0.4

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_actor_set_scale_with_gravity">
<description>
Scales the actor by scale_x, scale_y taking into consideration the
required gravity.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="scale_x">
<parameter_description> scaling factor for x axis
</parameter_description>
</parameter>
<parameter name="scale_y">
<parameter_description> scaling factor for y axis
</parameter_description>
</parameter>
<parameter name="gravity">
<parameter_description> #ClutterGravity to apply to scaling.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_score_rewind">
<description>
Rewinds a #ClutterScore to inital timeline.

</description>
<parameters>
<parameter name="score">
<parameter_description> A #ClutterScore
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_media_set_filename">
<description>
Sets the filename of the media source.

</description>
<parameters>
<parameter name="media">
<parameter_description> A #ClutterMedia object
</parameter_description>
</parameter>
<parameter name="filename">
<parameter_description> A filename to media file.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_event_get_coords">
<description>
Retrieves the coordinates of @event and puts them into @x and @y.

Since: 0.4

</description>
<parameters>
<parameter name="event">
<parameter_description> a #ClutterEvent
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> return location for the X coordinate
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> return location for the Y coordinate
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_entry_insert_unichar">
<description>
Insert a character to the right of the current position of the cursor,
and updates the position of the cursor.

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
<parameter name="wc">
<parameter_description> a Unicode character
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_lower_bottom">
<description>
Lowers @self to the bottom.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_score_new">
<description>
Create a new #ClutterScore instance.


</description>
<parameters>
</parameters>
<return> a new #ClutterScore
</return>
</function>

<function name="json_generator_set_root">
<description>
Sets @node as the root of the JSON data stream to be serialized by
the #JsonGenerator.

</description>
<parameters>
<parameter name="generator">
<parameter_description> a #JsonGenerator
</parameter_description>
</parameter>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_sqrti">
<description>
Very fast fixed point implementation of square root for integers.

This function is about 10x faster than clib sqrt() on x86, and (this is
not a typo!) more than 800x faster on ARM without FPU. It&apos;s error is &amp;lt; 5%
for arguments &amp;lt; 132 and &amp;lt; 10% for arguments &amp;lt; 5591.


</description>
<parameters>
<parameter name="x">
<parameter_description> integer value
</parameter_description>
</parameter>
</parameters>
<return> integer square root.


Since: 0.2
</return>
</function>

<function name="json_object_ref">
<description>
Increase by one the reference count of a #JsonObject.


</description>
<parameters>
<parameter name="object">
<parameter_description> a #JsonObject
</parameter_description>
</parameter>
</parameters>
<return> the passed #JsonObject, with the reference count
increased by one.
</return>
</function>

<function name="clutter_timeline_get_speed">
<description>
Gets the frames per second played by @timeline


</description>
<parameters>
<parameter name="timeline">
<parameter_description> a #ClutterTimeline
</parameter_description>
</parameter>
</parameters>
<return> the number of frames per second.
</return>
</function>

<function name="clutter_actor_hide">
<description>
Flags a clutter actor to be hidden. An actor not shown will not
appear on the display.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_sqrtx">
<description>
A fixed point implementation of squre root


</description>
<parameters>
<parameter name="x">
<parameter_description> a #ClutterFixed
</parameter_description>
</parameter>
</parameters>
<return> #ClutterFixed square root.

Since: 0.2
</return>
</function>

<function name="clutter_behaviour_scale_get_gravity">
<description>
Retrieves the #ClutterGravity applied by the scale behaviour.


</description>
<parameters>
<parameter name="scale">
<parameter_description> a #ClutterBehaviourScale
</parameter_description>
</parameter>
</parameters>
<return> the gravity used by the behaviour

Since: 0.4
</return>
</function>

<function name="clutter_label_set_text">
<description>
Sets @text as the text to be displayed by @label.

</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
<parameter name="text">
<parameter_description> the text to be displayed
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_layout_tune_request">
<description>
Iteratively queries a #ClutterLayout actor until it finds
its desired size, given a width and height tuple.

Since: 0.4

</description>
<parameters>
<parameter name="layout">
<parameter_description> a #ClutterLayout
</parameter_description>
</parameter>
<parameter name="given_width">
<parameter_description> width allocated by the parent
</parameter_description>
</parameter>
<parameter name="given_height">
<parameter_description> height allocated by the parent
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> return location for the new width
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> return location for the new height
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_texture_has_generated_tiles">
<description>
Checks if #ClutterTexture has generated underlying GL texture tiles.

This function is only useful for sub class implementations
and never should be called by an application.


</description>
<parameters>
<parameter name="texture">
<parameter_description> A #ClutterTexture
</parameter_description>
</parameter>
</parameters>
<return> TRUE if texture has pregenerated GL tiles.
</return>
</function>

<function name="SECTION">
<description>
Various misc utilility functions.

</description>
<parameters>
<parameter name="short_description">
<parameter_description> Misc utility functions.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_smoothstep_dec_func">
<description>
Convenience alpha function for a downward smoothstep curve. You can use
this function as the alpha function for clutter_alpha_set_func().


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="dummy">
<parameter_description> unused
</parameter_description>
</parameter>
</parameters>
<return> an alpha value

Since: 0.4
</return>
</function>

<function name="clutter_rectangle_get_border_width">
<description>
Gets the width (in pixels) of the border used by @rectangle


</description>
<parameters>
<parameter name="rectangle">
<parameter_description> a #ClutterRectangle
</parameter_description>
</parameter>
</parameters>
<return> the border&apos;s width

Since: 0.2
</return>
</function>

<function name="clutter_smoothstep_inc_func">
<description>
Convenience alpha function for a smoothstep curve. You can use this
function as the alpha function for clutter_alpha_set_func().


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="dummy">
<parameter_description> unused
</parameter_description>
</parameter>
</parameters>
<return> an alpha value

Since: 0.4
</return>
</function>

<function name="clutter_actor_lower">
<description>
Puts @self below @above.
Both actors must have the same parent.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="above">
<parameter_description> A #ClutterActor to lower below
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_rotate_set_direction">
<description>
Sets the rotation direction used by the rotate behaviour.

Since: 0.4

</description>
<parameters>
<parameter name="rotate">
<parameter_description> a #ClutterBehaviourRotate
</parameter_description>
</parameter>
<parameter name="direction">
<parameter_description> the rotation direction
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_node_get_string">
<description>
Gets the string value stored inside a #JsonNode


</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode of type %JSON_NODE_VALUE
</parameter_description>
</parameter>
</parameters>
<return> a string value.
</return>
</function>

<function name="clutter_color_copy">
<description>
Makes a copy of the color structure.  The result must be
freed using clutter_color_free().


</description>
<parameters>
<parameter name="color">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return> an allocated copy of @color.

Since: 0.2
</return>
</function>

<function name="clutter_timeline_set_n_frames">
<description>
Sets the total number of frames for @timeline

</description>
<parameters>
<parameter name="timeline">
<parameter_description> a #ClutterTimeline
</parameter_description>
</parameter>
<parameter name="n_frames">
<parameter_description> the number of frames
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_group_add_many_valist">
<description>
Similar to clutter_group_add_many() but using a va_list.  Use this
function inside bindings.

@Deprecated: 0.4: This function is obsolete, use
clutter_container_add_valist() instead.

</description>
<parameters>
<parameter name="group">
<parameter_description> a #ClutterGroup
</parameter_description>
</parameter>
<parameter name="first_actor">
<parameter_description> the #ClutterActor actor to add to the group
</parameter_description>
</parameter>
<parameter name="var_args">
<parameter_description> the actors to be added
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_label_new">
<description>
Creates a new, empty #ClutterLabel.


</description>
<parameters>
</parameters>
<return> the newly created #ClutterLabel
</return>
</function>

<function name="clutter_script_ensure_object">
<description>
Ensure that every object defined inside @script is correctly
constructed. You should rarely need to use this function.

Since: 0.6

</description>
<parameters>
<parameter name="script">
<parameter_description> a #ClutterScript
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_event_put">
<description>
Puts a copy of the event on the back of the event queue.
The event will have the #CLUTTER_EVENT_FLAG_SYNTHETIC flag set. 

Since: 0.6

</description>
<parameters>
<parameter name="event">
<parameter_description> a #ClutterEvent
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_egl_display">
<description>
Gets the current EGLDisplay.


</description>
<parameters>
</parameters>
<return> an EGLDisplay

Since: 0.4
</return>
</function>

<function name="clutter_actor_remove_clip">
<description>
Removes clip area in pixels from @self.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_ellipse_set_angle_end">
<description>
Sets the angle at which movement ends.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="angle_end">
<parameter_description> angle at which movement ends in degrees.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_array_sized_new">
<description>
Creates a new #JsonArray with @n_elements slots already allocated.


</description>
<parameters>
<parameter name="n_elements">
<parameter_description> number of slots to pre-allocate
</parameter_description>
</parameter>
</parameters>
<return> the newly created #JsonArray
</return>
</function>

<function name="ClutterBehaviourPath">
<description>
This signal is emitted each time a node defined inside the path
is reached.

Since: 0.2

</description>
<parameters>
<parameter name="pathb">
<parameter_description> the object which received the signal
</parameter_description>
</parameter>
<parameter name="knot">
<parameter_description> the #ClutterKnot reached
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_unset_reactive">
<description>
Sets @actor as not reactive.

Since: 0.6

</description>
<parameters>
<parameter name="actor">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_entry_insert_text">
<description>
Insert text at a specifc position.

A value of 0 indicates  that the text will be inserted before the first
character in the entrys text, and a value of -1 indicates that the text
will be inserted after the last character in the entrys text.

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
<parameter name="text">
<parameter_description> the text to insert
</parameter_description>
</parameter>
<parameter name="position">
<parameter_description> the position at which to insert the text.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_scriptable_get_name">
<description>
Retrieves the name of @scriptable set using clutter_scriptable_set_name().


</description>
<parameters>
<parameter name="scriptable">
<parameter_description> a #ClutterScriptable
</parameter_description>
</parameter>
</parameters>
<return> the name of the object. The returned string is owned by
the scriptable object and should never be modified of freed

Since: 0.6
</return>
</function>

<function name="clutter_color_free">
<description>
Frees a color structure created with clutter_color_copy().

Since: 0.2

</description>
<parameters>
<parameter name="color">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_perspective_free">
<description>
Frees a perspective structure created with clutter_perspective_copy().

Since: 0.4

</description>
<parameters>
<parameter name="perspective">
<parameter_description> a #ClutterPerspective
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_media_get_volume">
<description>
Retrieves the playback volume of @media.


</description>
<parameters>
<parameter name="media">
<parameter_description> A #ClutterMedia object
</parameter_description>
</parameter>
</parameters>
<return> The playback volume between 0.0 and 1.0
</return>
</function>

<function name="json_generator_new">
<description>
Creates a new #JsonGenerator. You can use this object to generate a
JSON data stream starting from a data object model composed by
#JsonNode&amp;lt;!-- --&amp;gt;s.


</description>
<parameters>
</parameters>
<return> the newly created #JsonGenerator instance
</return>
</function>

<function name="clutter_effect_scale">
<description>
Simple effect for scaling a single #ClutterActor.


</description>
<parameters>
<parameter name="template_">
<parameter_description> A #ClutterEffectTemplate
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> A #ClutterActor to apply the effect to.
</parameter_description>
</parameter>
<parameter name="scale_begin">
<parameter_description> Initial scale factor to apply to actor
</parameter_description>
</parameter>
<parameter name="scale_end">
<parameter_description> Final scale factor to apply to actor
</parameter_description>
</parameter>
<parameter name="gravity">
<parameter_description> A #ClutterGravity for the scale.
</parameter_description>
</parameter>
<parameter name="completed_func">
<parameter_description> A #ClutterEffectCompleteFunc to call on effect
completion or NULL
</parameter_description>
</parameter>
<parameter name="completed_data">
<parameter_description> Data to pass to supplied  #ClutterEffectCompleteFunc
or NULL
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterTimeline for the effect. Will be unreferenced by
the effect when completed.

Since: 0.4
</return>
</function>

<function name="clutter_actor_get_width">
<description>
Retrieves the actors width ignoring any scaling factors.


</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> The actor width in pixels
</return>
</function>

<function name="clutter_behaviour_ellipse_get_angle_endx">
<description>
Gets the angle at which movements ends.


</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterAngle

Since: 0.4
</return>
</function>

<function name="clutter_label_get_attributes">
<description>
Gets the attribute list that was set on the label using
clutter_label_set_attributes(), if any.


</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
</parameters>
<return> the attribute list, or %NULL if none was set.

Since: 0.2
</return>
</function>

<function name="clutter_behaviour_rotate_get_center">
<description>
Retrieves the center of rotation set using
clutter_behaviour_rotate_set_center().

Since: 0.4

</description>
<parameters>
<parameter name="rotate">
<parameter_description> a #ClutterBehaviourRotate
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> return location for the X center of rotation
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> return location for the Y center of rotation
</parameter_description>
</parameter>
<parameter name="z">
<parameter_description> return location for the Z center of rotation
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_timeline_get_progressx">
<description>
Fixed point version of clutter_timeline_get_progress().


</description>
<parameters>
<parameter name="timeline">
<parameter_description> a #ClutterTimeline
</parameter_description>
</parameter>
</parameters>
<return> the position of the timeline as a fixed point value

Since: 0.6
</return>
</function>

<function name="clutter_script_load_from_file">
<description>
Loads the definitions from @filename into @script and merges with
the currently loaded ones, if any.


</description>
<parameters>
<parameter name="script">
<parameter_description> a #ClutterScript
</parameter_description>
</parameter>
<parameter name="filename">
<parameter_description> the full path to the definition file
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError, or %NULL
</parameter_description>
</parameter>
</parameters>
<return> on error, zero is returned and @error is set
accordingly. On success, the merge id for the UI definitions is
returned. You can use the merge id with clutter_script_unmerge().

Since: 0.6
</return>
</function>

<function name="clutter_behaviour_rotate_set_axis">
<description>
Sets the axis used by the rotate behaviour.

Since: 0.4

</description>
<parameters>
<parameter name="rotate">
<parameter_description> a #ClutterBehaviourRotate
</parameter_description>
</parameter>
<parameter name="axis">
<parameter_description> a #ClutterRotateAxis
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_threads_add_idle">
<description>
Simple wrapper around clutter_threads_add_idle_full()


</description>
<parameters>
<parameter name="func">
<parameter_description> function to call
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> data to pass to the function
</parameter_description>
</parameter>
</parameters>
<return> the ID (greater than 0) of the event source.

Since: 0.4
</return>
</function>

<function name="clutter_label_new_full">
<description>
Creates a new #ClutterLabel displaying @text with color @color 
using @font_name.


</description>
<parameters>
<parameter name="font_name">
<parameter_description> the name (and size) of the font to be used
</parameter_description>
</parameter>
<parameter name="text">
<parameter_description> the text to be displayed
</parameter_description>
</parameter>
<parameter name="color">
<parameter_description> #ClutterColor for text
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterLabel
</return>
</function>

<function name="clutter_event_type">
<description>
Retrieves the type of the event.


</description>
<parameters>
<parameter name="event">
<parameter_description> a #ClutterEvent
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterEventType
</return>
</function>

<function name="json_array_ref">
<description>
Increase by one the reference count of a #JsonArray.


</description>
<parameters>
<parameter name="array">
<parameter_description> a #JsonArray
</parameter_description>
</parameter>
</parameters>
<return> the passed #JsonArray, with the reference count
increased by one.
</return>
</function>

<function name="clutter_media_get_position">
<description>
Retrieves the position of @media.


</description>
<parameters>
<parameter name="media">
<parameter_description> A #ClutterMedia object
</parameter_description>
</parameter>
</parameters>
<return> The playback position.
</return>
</function>

<function name="clutter_timeline_rewind">
<description>
Rewinds #ClutterTimeline to frame 0.

</description>
<parameters>
<parameter name="timeline">
<parameter_description> A #ClutterTimeline
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_stage_snapshot">
<description>
Gets a pixel based representation of the current rendered stage.


</description>
<parameters>
<parameter name="stage">
<parameter_description> A #ClutterStage
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> x coordinate of the first pixel that is read from stage
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> y coordinate of the first pixel that is read from stage
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> Width dimention of pixels to be read, or -1 for the
entire stage width
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> Height dimention of pixels to be read, or -1 for the
entire stage height
</parameter_description>
</parameter>
</parameters>
<return> pixel representation as a  #GdkPixbuf
</return>
</function>

<function name="clutter_script_new">
<description>
Creates a new #ClutterScript instance. #ClutterScript can be used
to load objects definitions for scenegraph elements, like actors,
or behavioural elements, like behaviours and timelines. The
definitions must be encoded using the JavaScript Object Notation (JSON)
language.


</description>
<parameters>
</parameters>
<return> the newly created #ClutterScript instance. Use
g_object_unref() when done.

Since: 0.6
</return>
</function>

<function name="clutter_behaviour_bspline_set_origin">
<description>
Sets the origin of the bezier to the point represented by knot. (Initially
the origin of a bspline is given by the position of the first control point
of the first bezier curve.)

Since: 0.4

</description>
<parameters>
<parameter name="bs">
<parameter_description>   a #ClutterBehaviourBspline
</parameter_description>
</parameter>
<parameter name="knot">
<parameter_description> a #ClutterKnot origin for the bezier
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_get_geometry">
<description>
Gets the actors untransformed geometry in pixels relative to any
parent actor.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="geometry">
<parameter_description> A location to store actors #ClutterGeometry
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="ClutterActor">
<description>
The ::captured-event signal is emitted when an event is captured
by Clutter.

Since: 0.6

</description>
<parameters>
<parameter name="actor">
<parameter_description> the actor which the pointer has left
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_feature_available">
<description>
Checks whether @feature is available.  @feature can be a logical
OR of #ClutterFeatureFlags.


</description>
<parameters>
<parameter name="feature">
<parameter_description> a #ClutterFeatureFlags
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if a feature is available

Since: 0.1.1
</return>
</function>

<function name="clutter_stage_get_user_resizable">
<description>
Retrieves the value set with clutter_stage_set_user_resizable().


</description>
<parameters>
<parameter name="stage">
<parameter_description> a #ClutterStage
</parameter_description>
</parameter>
</parameters>
<return> %TRUE is the stage is resizable by the user.

Since: 0.4
</return>
</function>

<function name="clutter_container_sort_depth_order">
<description>
Sorts a container children using their depth. This function should not
be normally used by applications.

Since: 0.6

</description>
<parameters>
<parameter name="container">
<parameter_description> a #ClutterContainer
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_ellipse_set_width">
<description>
Sets the width of the elliptical path.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> width of the ellipse
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_pop_transform_child">
<description>
Cancels the effects of a previous clutter_actor_push_transform_child()
call.

Since: 0.6

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_sine_half_func">
<description>
Convenience alpha function for a sine wave over interval [0, pi].
You can use this function as the alpha function for
clutter_alpha_set_func().


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="dummy">
<parameter_description> unused argument
</parameter_description>
</parameter>
</parameters>
<return> an alpha value.

Since: 0.4
</return>
</function>

<function name="clutter_backend_set_resolution">
<description>
Sets the resolution for font handling on the screen. This is a
scale factor between points specified in a #PangoFontDescription
and cairo units. The default value is 96, meaning that a 10 point
font will be 13 units high. (10 * 96. / 72. = 13.3).

Applications should never need to call this function.

Since: 0.4

</description>
<parameters>
<parameter name="backend">
<parameter_description> a #ClutterBackend
</parameter_description>
</parameter>
<parameter name="dpi">
<parameter_description> the resolution in &quot;dots per inch&quot; (Physical inches aren&apos;t
actually involved; the terminology is conventional).
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_container_raise_child">
<description>
Raises @actor at @sibling level, in the depth ordering.

Since: 0.6

</description>
<parameters>
<parameter name="container">
<parameter_description> a #ClutterContainer
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> the actor to raise
</parameter_description>
</parameter>
<parameter name="sibling">
<parameter_description> the sibling to raise to, or %NULL to raise at the top
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_node_take_array">
<description>
Sets @array into @node without increasing the #JsonArray reference count.

</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
<parameter name="array">
<parameter_description> a #JsonArray
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_scriptable_set_custom_property">
<description>
Overrides the common properties setting. The underlying virtual
function should be used when implementing custom properties.

Since: 0.6

</description>
<parameters>
<parameter name="scriptable">
<parameter_description> a #ClutterScriptable
</parameter_description>
</parameter>
<parameter name="script">
<parameter_description> the #ClutterScript creating the scriptable instance
</parameter_description>
</parameter>
<parameter name="name">
<parameter_description> the name of the property
</parameter_description>
</parameter>
<parameter name="value">
<parameter_description> the value of the property
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_texture_get_y_tile_detail">
<description>
Retreives details of a tile on y axis.

This function is only useful for sub class implementations
and never should be called by an application.

</description>
<parameters>
<parameter name="texture">
<parameter_description> A #ClutterTexture
</parameter_description>
</parameter>
<parameter name="y_index">
<parameter_description> Y index of tile to query
</parameter_description>
</parameter>
<parameter name="pos">
<parameter_description> Location to store tiles Y position
</parameter_description>
</parameter>
<parameter name="size">
<parameter_description> Location to store tiles vertical size in pixels
</parameter_description>
</parameter>
<parameter name="waste">
<parameter_description> Location to store tiles vertical wastage in pixels
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_texture_get_base_size">
<description>
Gets the size in pixels of the untransformed underlying texture pixbuf data.


</description>
<parameters>
<parameter name="texture">
<parameter_description> A #ClutterTexture
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description>   Pointer to gint to be populated with width value if non NULL.
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description>  Pointer to gint to be populated with height value if non NULL.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_backend_get_resolution">
<description>
Gets the resolution for font handling on the screen; see
clutter_backend_set_resolution() for full details.


</description>
<parameters>
<parameter name="backend">
<parameter_description> a #ClutterBackend
</parameter_description>
</parameter>
</parameters>
<return> the current resolution, or -1 if no resolution
has been set.

Since: 0.4
</return>
</function>

<function name="json_array_add_element">
<description>
Appends @node inside @array. The array will take ownership of the
#JsonNode.

</description>
<parameters>
<parameter name="array">
<parameter_description> a #JsonArray
</parameter_description>
</parameter>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_stage_set_perspectivex">
<description>
Set the stage perspective.

</description>
<parameters>
<parameter name="stage">
<parameter_description> A #ClutterStage
</parameter_description>
</parameter>
<parameter name="perspective">
<parameter_description> A #ClutterPerspective
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_get_nth_actor">
<description>
Gets an actor the behaviour was applied to referenced by index num.


</description>
<parameters>
<parameter name="behave">
<parameter_description> a #ClutterBehaviour
</parameter_description>
</parameter>
<parameter name="index_">
<parameter_description> the index of an actor this behaviour is applied too. 
</parameter_description>
</parameter>
</parameters>
<return> A Clutter actor or NULL if @index_ is invalid.

Since: 0.2
</return>
</function>

<function name="ClutterBehaviourRotate">
<description>
The z center of rotation. 

Since: 0.4

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_actor_set_width">
<description>
Requests a new width for actor

since: 2.0

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> Requested new width for actor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_rotate_yx">
<description>
Rotates actor around the X axis.

</description>
<parameters>
<parameter name="self">
<parameter_description>  A #ClutterActor
</parameter_description>
</parameter>
<parameter name="angle">
<parameter_description> Angle of rotation
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description>     X co-ord to rotate actor around ( relative to actor position )
</parameter_description>
</parameter>
<parameter name="z">
<parameter_description>     Z co-ord to rotate actor around ( relative to actor position )
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_do_event">
<description>
Processes an event. This function should never be called by applications.

Since: 0.4

</description>
<parameters>
<parameter name="event">
<parameter_description> a #ClutterEvent.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_node_set_array">
<description>
Sets @array inside @node and increases the #JsonArray reference count

</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
<parameter name="array">
<parameter_description> a #JsonArray
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_score_get_loop">
<description>
Gets whether @score is looping


</description>
<parameters>
<parameter name="score">
<parameter_description> a #ClutterScore
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the score is looping
</return>
</function>

<function name="clutter_backend_get_double_click_time">
<description>
Gets the maximum time between two button press events, as set
by clutter_backend_set_double_click_time().


</description>
<parameters>
<parameter name="backend">
<parameter_description> a #ClutterBackend
</parameter_description>
</parameter>
</parameters>
<return> a time in milliseconds

Since: 0.4
</return>
</function>

<function name="pango_clutter_font_map_create_context">
<description>
Create a #PangoContext for the given fontmap.


</description>
<parameters>
<parameter name="fontmap">
<parameter_description> a #PangoClutterFontmap
</parameter_description>
</parameter>
</parameters>
<return> the newly created context; free with g_object_unref().

Since: 1.2
</return>
</function>

<function name="clutter_key_event_unicode">
<description>
Retrieves the unicode value for the key that caused @keyev.


</description>
<parameters>
<parameter name="keyev">
<parameter_description> A #ClutterKeyEvent
</parameter_description>
</parameter>
</parameters>
<return> The unicode value representing the key
</return>
</function>

<function name="clutter_container_find_child_by_name">
<description>
Finds a child actor of a container by its name. Search recurses
into any child container.


</description>
<parameters>
<parameter name="container">
<parameter_description> a #ClutterContainer
</parameter_description>
</parameter>
<parameter name="child_name">
<parameter_description> the name of the requested child.
</parameter_description>
</parameter>
</parameters>
<return> The child actor with the requested name, or %NULL if no
actor with that name was found.

Since: 0.6
</return>
</function>

<function name="pango_clutter_font_map_substitute_changed">
<description>
Call this function any time the results of the
default substitution function set with
pango_clutter_font_map_set_default_substitute() change.
That is, if your subsitution function will return different
results for the same input pattern, you must call this function.

Since: 1.2

</description>
<parameters>
<parameter name="fontmap">
<parameter_description> a #PangoClutterFontmap
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_sine_dec_func">
<description>
Convenience alpha function for a sine wave over interval [pi / 2, pi].
You can use this function as the alpha function for
clutter_alpha_set_func().


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="dummy">
<parameter_description> unused argument
</parameter_description>
</parameter>
</parameters>
<return> an alpha value.

Since: 0.4
</return>
</function>

<function name="clutter_timeline_clone">
<description>
Create a new #ClutterTimeline instance which has property values
matching that of supplied timeline. The cloned timeline will not
be started and will not be positioned to the current position of
@timeline: you will have to start it with clutter_timeline_start().


</description>
<parameters>
<parameter name="timeline">
<parameter_description> #ClutterTimeline to duplicate.
</parameter_description>
</parameter>
</parameters>
<return> a new #ClutterTimeline, cloned from @timeline

Since 0.4
</return>
</function>

<function name="clutter_actor_set_position">
<description>
Sets the actors position in pixels relative to any
parent actor.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> New left position of actor in pixels.
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> New top position of actor in pixels.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_entry_handle_key_event">
<description>
This function will handle a #ClutterKeyEvent, like those returned in a
key-press/release-event, and will translate it for the @entry. This includes
non-alphanumeric keys, such as the arrows keys, which will move the
input cursor. You should use this function inside a handler for the
ClutterStage::key-press-event or ClutterStage::key-release-event.

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
<parameter name="kev">
<parameter_description> a #ClutterKeyEvent
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_group_add">
<description>
Adds a new child #ClutterActor to the #ClutterGroup.

@Deprecated: 0.4: This function is obsolete, use
clutter_container_add_actor() instead.

</description>
<parameters>
<parameter name="group">
<parameter_description> A #ClutterGroup
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_path_get_knots">
<description>
Return value: a #GSList of the paths knots.

</description>
<parameters>
<parameter name="pathb">
<parameter_description> a #ClutterBehvaiourPath
</parameter_description>
</parameter>
</parameters>
<return> a #GSList of the paths knots.

Since: 0.2
</return>
</function>

<function name="json_node_set_value">
<description>
Sets @value inside @node. The passed #GValue is copied into the #JsonNode

</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
<parameter name="value">
<parameter_description> the #GValue to set
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_ellipse_set_height">
<description>
Sets the height of the elliptical path.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> height of the ellipse
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_stage_get_perspective">
<description>
Retrieves the stage perspective.

</description>
<parameters>
<parameter name="stage">
<parameter_description> A #ClutterStage
</parameter_description>
</parameter>
<parameter name="fovy">
<parameter_description> FIXME
</parameter_description>
</parameter>
<parameter name="aspect">
<parameter_description> FIXME
</parameter_description>
</parameter>
<parameter name="z_near">
<parameter_description> FIXME
</parameter_description>
</parameter>
<parameter name="z_far">
<parameter_description> FIXME
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_eglx_get_stage_window">
<description>
FIXME


</description>
<parameters>
<parameter name="stage">
<parameter_description> a #ClutterStage
</parameter_description>
</parameter>
</parameters>
<return> FIXME

Since: 0.4
</return>
</function>

<function name="clutter_main_quit">
<description>
Terminates the Clutter mainloop.

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_alpha_get_alpha">
<description>
Query the current alpha value.


</description>
<parameters>
<parameter name="alpha">
<parameter_description> A #ClutterAlpha
</parameter_description>
</parameter>
</parameters>
<return> The current alpha value for the alpha

Since: 0.2
</return>
</function>

<function name="json_object_get_member">
<description>
Retrieves the #JsonNode containing the value of @member_name inside
a #JsonObject.


</description>
<parameters>
<parameter name="object">
<parameter_description> a #JsonObject
</parameter_description>
</parameter>
<parameter name="member_name">
<parameter_description> the name of the JSON object member to access
</parameter_description>
</parameter>
</parameters>
<return> a pointer to the node for the requested object
member, or %NULL
</return>
</function>

<function name="clutter_color_equal">
<description>
Compares two #ClutterColor&amp;lt;!-- --&amp;gt;s and checks if they are the same.


</description>
<parameters>
<parameter name="a">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
<parameter name="b">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the two colors are the same.

Since: 0.2
</return>
</function>

<function name="clutter_behaviour_scale_get_bounds">
<description>
Retrieves the bounds used by scale behaviour.

Since: 0.4

</description>
<parameters>
<parameter name="scale">
<parameter_description> a #ClutterBehaviourScale
</parameter_description>
</parameter>
<parameter name="scale_begin">
<parameter_description> return location for the initial scale factor
</parameter_description>
</parameter>
<parameter name="scale_end">
<parameter_description> return location for the final scale factor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_reparent">
<description>
This function resets the parent actor of @self.  It is
logically equivalent to calling clutter_actory_unparent()
and clutter_actor_set_parent().

Since: 0.2

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
<parameter name="new_parent">
<parameter_description> the new #ClutterActor parent
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_scriptable_parse_custom_node">
<description>
Parses the passed JSON node. The implementation must set the type
of the passed #GValue pointer using g_value_init().


</description>
<parameters>
<parameter name="scriptable">
<parameter_description> a #ClutterScriptable
</parameter_description>
</parameter>
<parameter name="script">
<parameter_description> the #ClutterScript creating the scriptable instance
</parameter_description>
</parameter>
<parameter name="value">
<parameter_description> the generic value to be set
</parameter_description>
</parameter>
<parameter name="name">
<parameter_description> the name of the node
</parameter_description>
</parameter>
<parameter name="node">
<parameter_description> the JSON node to be parsed
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the node was successfully parsed, %FALSE otherwise.

Since: 0.6
</return>
</function>

<function name="clutter_behaviour_actors_foreach">
<description>
Calls @func for every actor driven by @behave.

Since: 0.2

</description>
<parameters>
<parameter name="behave">
<parameter_description> a #ClutterBehaviour
</parameter_description>
</parameter>
<parameter name="func">
<parameter_description> a function called for each actor
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> optional data to be passed to the function, or %NULL
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_entry_get_font_name">
<description>
Retrieves the font used by @entry.


</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
</parameters>
<return> a string containing the font name, in a format
understandable by pango_font_description_from_string().  The
string is owned by #ClutterEntry and should not be modified
or freed.

Since: 0.4
</return>
</function>

<function name="clutter_glx_add_filter">
<description>
Adds @func to the list of event filters. Filter functions
receive the raw events and must return %CLUTTER_GLX_FILTER_CONTINUE
if the event should be processed by Clutter, %CLUTTER_GLX_FILTER_TRANSLATE
if the event has been translated by the function and it&apos;s ready
to be sent to the stage, or %CLUTTER_GLX_FILTER_REMOVE if the event should
not be sent to the stage.

Since: 0.4

</description>
<parameters>
<parameter name="func">
<parameter_description> an event filter function
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> user data to pass to the function, or %NULL
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_event_copy">
<description>
Copies @event.


</description>
<parameters>
<parameter name="event">
<parameter_description> A #ClutterEvent.
</parameter_description>
</parameter>
</parameters>
<return> A newly allocated #ClutterEvent
</return>
</function>

<function name="json_object_new">
<description>
Creates a new #JsonObject, an JSON object type representation.


</description>
<parameters>
</parameters>
<return> the newly created #JsonObject
</return>
</function>

<function name="clutter_container_remove_actor">
<description>
Removes @actor from @container. The actor should be unparented, so
if you want to keep it around you must hold a reference to it
yourself, using g_object_ref(). When the actor has been removed,
the &quot;actor-removed&quot; signal is emitted by @container.

Since: 0.4

</description>
<parameters>
<parameter name="container">
<parameter_description> a #ClutterContainer
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_timeline_set_duration">
<description>
Sets the duration of the timeline, in milliseconds. The speed
of the timeline depends on the ClutterTimeline:fps setting.

Since: 0.6

</description>
<parameters>
<parameter name="timeline">
<parameter_description> a #ClutterTimeline
</parameter_description>
</parameter>
<parameter name="msecs">
<parameter_description> duration of the timeline in milliseconds
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_glx_untrap_x_errors">
<description>
FIXME


</description>
<parameters>
</parameters>
<return> FIXME

Since: 0.4
</return>
</function>

<function name="clutter_event_get_source">
<description>
Retrieves the source #ClutterActor the event originated from, or
NULL if the event has no source.

Since: 0.6

</description>
<parameters>
<parameter name="event">
<parameter_description> a #ClutterEvent
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_path_remove_knot">
<description>
Removes a #ClutterKnot in the path at specified offset.

Since: 0.2

</description>
<parameters>
<parameter name="pathb">
<parameter_description> a #ClutterBehvaiourPath
</parameter_description>
</parameter>
<parameter name="offset">
<parameter_description> position in path to remove knot.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_timeline_get_progress">
<description>
The position of the timeline in a [0, 1] interval.


</description>
<parameters>
<parameter name="timeline">
<parameter_description> a #ClutterTimeline
</parameter_description>
</parameter>
</parameters>
<return> the position of the timeline.

Since: 0.6
</return>
</function>

<function name="clutter_color_to_pixel">
<description>
Converts @src into a packed 32 bit integer, containing
all the four 8 bit channels used by #ClutterColor.


</description>
<parameters>
<parameter name="src">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return> a packed color
</return>
</function>

<function name="clutter_backend_get_double_click_distance">
<description>
Retrieves the distance used to verify a double click event


</description>
<parameters>
<parameter name="backend">
<parameter_description> a #ClutterBackend
</parameter_description>
</parameter>
</parameters>
<return> a distance, in pixels.

Since: 0.4
</return>
</function>

<function name="clutter_perspective_copy">
<description>
Makes a copy of the perspective structure.  The result must be
freed using clutter_perspective_free().


</description>
<parameters>
<parameter name="perspective">
<parameter_description> a #ClutterPerspective
</parameter_description>
</parameter>
</parameters>
<return> an allocated copy of @perspective.

Since: 0.4
</return>
</function>

<function name="clutter_entry_set_invisible_char">
<description>
Sets the character to use in place of the actual text when
#clutter_entry_set_visibility() has been called to set text visibility
to FALSE. i.e. this is the character used in &quot;password mode&quot; to show the
user how many characters have been typed. The default invisible char is an
asterisk (&apos;*&apos;). If you set the invisible char to 0, then the user will get
no feedback at all; there will be no text on the screen as they type.

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
<parameter name="wc">
<parameter_description> a Unicode character
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_entry_new_with_text">
<description>
Creates a new #ClutterEntry displaying @text using @font_name.


</description>
<parameters>
<parameter name="font_name">
<parameter_description> the name (and size) of the font to be used
</parameter_description>
</parameter>
<parameter name="text">
<parameter_description> the text to be displayed
</parameter_description>
</parameter>
</parameters>
<return> the newly created #ClutterEntry

Since: 0.4
</return>
</function>

<function name="clutter_behaviour_scale_newx">
<description>
A fixed point implementation of clutter_behaviour_scale_new()


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="scale_begin">
<parameter_description> initial scale factor
</parameter_description>
</parameter>
<parameter name="scale_end">
<parameter_description> final scale factor
</parameter_description>
</parameter>
<parameter name="gravity">
<parameter_description> a #ClutterGravity for the scale.
</parameter_description>
</parameter>
</parameters>
<return> the newly created #ClutterBehaviourScale

Since: 0.2
</return>
</function>

<function name="clutter_timeline_stop">
<description>
Stops the #ClutterTimeline and moves to frame 0

</description>
<parameters>
<parameter name="timeline">
<parameter_description> A #ClutterTimeline
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_rectangle_set_color">
<description>
Sets the color of @rectangle.

</description>
<parameters>
<parameter name="rectangle">
<parameter_description> a #ClutterRectangle
</parameter_description>
</parameter>
<parameter name="color">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="ClutterEntry">
<description>
The ::activate signal is emitted each time the netry is &apos;activated&apos;
by the user, normally by pressing the &apos;Enter&apos; key. This signal will
only be emitted when your are adding text to the entry via
#clutter_entry_handle_key_event().

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> the actor which received the event
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_object_remove_member">
<description>
Removes @member_name from @object, freeing its allocated resources.

</description>
<parameters>
<parameter name="object">
<parameter_description> a #JsonObject
</parameter_description>
</parameter>
<parameter name="member_name">
<parameter_description> the name of the member to remove
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_threads_set_lock_functions">
<description>
Allows the application to replace the standard method that
Clutter uses to protect its data structures. Normally, Clutter
creates a single #GMutex that is locked by clutter_threads_enter(),
and released by clutter_threads_leave(); using this function an
application provides, instead, a function @enter_fn that is
called by clutter_threads_enter() and a function @leave_fn that is
called by clutter_threads_leave().

The functions must provide at least same locking functionality
as the default implementation, but can also do extra application
specific processing.

As an example, consider an application that has its own recursive
lock that when held, holds the Clutter lock as well. When Clutter
unlocks the Clutter lock when entering a recursive main loop, the
application must temporarily release its lock as well.

Most threaded Clutter apps won&apos;t need to use this method.

This method must be called before clutter_threads_init(), and cannot
be called multiple times.

Since: 0.4

</description>
<parameters>
<parameter name="enter_fn">
<parameter_description> function called when aquiring the Clutter main lock
</parameter_description>
</parameter>
<parameter name="leave_fn">
<parameter_description> function called when releasing the Clutter main lock
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_events_pending">
<description>
Checks if events are pending in the event queue.


</description>
<parameters>
</parameters>
<return> TRUE if there are pending events, FALSE otherwise.

Since: 0.4
</return>
</function>

<function name="clutter_main_level">
<description>
Retrieves the depth of the Clutter mainloop.


</description>
<parameters>
</parameters>
<return> The level of the mainloop.
</return>
</function>

<function name="clutter_rectangle_get_color">
<description>
Retrieves the color of @rectangle.

</description>
<parameters>
<parameter name="rectangle">
<parameter_description> a #ClutterRectangle
</parameter_description>
</parameter>
<parameter name="color">
<parameter_description> return location for a #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_media_set_volume">
<description>
Sets the playback volume of @media to @volume.

</description>
<parameters>
<parameter name="media">
<parameter_description> A #ClutterMedia object
</parameter_description>
</parameter>
<parameter name="volume">
<parameter_description> The volume as a double between 0.0 and 1.0
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_rotate_x">
<description>
Rotates actor around the X axis.

</description>
<parameters>
<parameter name="self">
<parameter_description>  A #ClutterActor
</parameter_description>
</parameter>
<parameter name="angle">
<parameter_description> Angle of rotation
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description>     Y co-ord to rotate actor around ( relative to actor position )
</parameter_description>
</parameter>
<parameter name="z">
<parameter_description>     Z co-ord to rotate actor around ( relative to actor position )
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_entry_get_text">
<description>
Retrieves the text displayed by @entry


</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
</parameters>
<return> the text of the entry.  The returned string is
owned by #ClutterEntry and should not be modified or freed.

Since: 0.4
</return>
</function>

<function name="clutter_group_remove_all">
<description>
Removes all children actors from the #ClutterGroup.

</description>
<parameters>
<parameter name="group">
<parameter_description> A #ClutterGroup
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_effect_fade">
<description>
Simple effect for fading a single #ClutterActor.


</description>
<parameters>
<parameter name="template_">
<parameter_description> A #ClutterEffectTemplate
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> A #ClutterActor to apply the effect to.
</parameter_description>
</parameter>
<parameter name="start_opacity">
<parameter_description> Initial opacity value to apply to actor
</parameter_description>
</parameter>
<parameter name="end_opacity">
<parameter_description> Final opacity value to apply to actor
</parameter_description>
</parameter>
<parameter name="completed_func">
<parameter_description> A #ClutterEffectCompleteFunc to call on effect
completion or %NULL
</parameter_description>
</parameter>
<parameter name="completed_data">
<parameter_description> Data to pass to supplied  #ClutterEffectCompleteFunc
or %NULL
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterTimeline for the effect. Will be unrefed by
the effect when completed.

Since: 0.4
</return>
</function>

<function name="ClutterGroup">
<description>
The ::remove signal is emitted each time an actor has been removed
from the group

@Deprecated: 0.4: This signal is deprecated, you should connect
to the ClutterContainer::actor-removed signal instead

</description>
<parameters>
<parameter name="group">
<parameter_description> the #ClutterGroup that received the signal
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> the actor added to the group
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_object_get_size">
<description>
Retrieves the number of members of a #JsonObject.


</description>
<parameters>
<parameter name="object">
<parameter_description> a #JsonObject
</parameter_description>
</parameter>
</parameters>
<return> the number of members
</return>
</function>

<function name="clutter_actor_get_height">
<description>
Retrieves the actors height ignoring any scaling factors.


</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> The actor height in pixels
</return>
</function>

<function name="clutter_behaviour_ellipse_get_tilt">
<description>
Gets the tilt of the ellipse around the center in Y axis.


Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="angle_tilt_x">
<parameter_description> location for tilt of the elipse around the center in X axis in
degrees, or NULL.
</parameter_description>
</parameter>
<parameter name="angle_tilt_y">
<parameter_description> location for tilt of the elipse around the center in Y axis in
degrees, or NULL.
</parameter_description>
</parameter>
<parameter name="angle_tilt_z">
<parameter_description> location for tilt of the elipse around the center in Z axis in
degrees, or NULL.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_fixed_qmulx">
<description>

</description>
<parameters>
<parameter name="op1">
<parameter_description> #ClutterFixed
</parameter_description>
</parameter>
<parameter name="op2">
<parameter_description> #ClutterFixed
</parameter_description>
</parameter>
</parameters>
<return> #ClutterFixed.

Multiplies two fixed values using 64bit arithmetic; this provides
significantly better precission than the #CLUTTER_FIXED_MUL macro,
but at performance cost (about 2.7 times slowdown on ARMv5e, and 2 times
on x86).

Since: 0.3
</return>
</function>

<function name="clutter_stage_get_perspectivex">
<description>
Retrieves the stage perspective.

</description>
<parameters>
<parameter name="stage">
<parameter_description> A #ClutterStage
</parameter_description>
</parameter>
<parameter name="perspective">
<parameter_description> return location for a #ClutterPerspective
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_threads_init">
<description>
Initialises the Clutter threading mechanism, so that Clutter API can be
called by multiple threads, using clutter_threads_enter() and
clutter_threads_leave() to mark the critical sections.

You must call g_thread_init() before this function.

This function must be called before clutter_init().

Since: 0.4

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="ClutterAlpha">
<description>
The alpha value as computed by the alpha function.

Since: 0.2

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_actor_paint">
<description>
Renders the actor to display.

This function should not be called directly by applications instead
#clutter_actor_queue_redraw should be used to queue paints.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_color_from_pixel">
<description>
Converts @pixel from the packed representation of a four 8 bit channel
color to a #ClutterColor.

</description>
<parameters>
<parameter name="dest">
<parameter_description> return location for a #ClutterColor
</parameter_description>
</parameter>
<parameter name="pixel">
<parameter_description> a 32 bit packed integer containing a color
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_realize">
<description>
Creates any underlying graphics resources needed by the actor to be
displayed.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_stage_set_color">
<description>
Set the stage color.

</description>
<parameters>
<parameter name="stage">
<parameter_description> A #ClutterStage
</parameter_description>
</parameter>
<parameter name="color">
<parameter_description> A #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_ellipse_set_angle_begin">
<description>
Sets the angle at which movement begins.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="angle_begin">
<parameter_description> angle at which movement begins in degrees
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_effect_depth">
<description>
Simple effect for changing the depth of a single #ClutterActor.


</description>
<parameters>
<parameter name="template_">
<parameter_description> A #ClutterEffectTemplate
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> A #ClutterActor to apply the effect to.
</parameter_description>
</parameter>
<parameter name="start_depth">
<parameter_description> Initial depth value to apply to actor
</parameter_description>
</parameter>
<parameter name="end_depth">
<parameter_description> Final depth value to apply to actor
</parameter_description>
</parameter>
<parameter name="completed_func">
<parameter_description> A #ClutterEffectCompleteFunc to call on effect
completion or %NULL
</parameter_description>
</parameter>
<parameter name="completed_data">
<parameter_description> Data to pass to supplied  #ClutterEffectCompleteFunc
or %NULL
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterTimeline for the effect. Will be unrefed by
the effect when completed.

Since: 0.4
</return>
</function>

<function name="clutter_actor_move_by">
<description>
Moves an actor by specified distance relative to
current position in pixels.

Since: 0.2

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="dx">
<parameter_description> Distance to move Actor on X axis.
</parameter_description>
</parameter>
<parameter name="dy">
<parameter_description> Distance to move Actor on Y axis.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_media_set_playing">
<description>
Starts or stops @media playing.

</description>
<parameters>
<parameter name="media">
<parameter_description> A #ClutterMedia object
</parameter_description>
</parameter>
<parameter name="playing">
<parameter_description> TRUE to start playing, FALSE to stop.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_scale_new">
<description>
Creates a new  #ClutterBehaviourScale instance.


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="scale_begin">
<parameter_description> initial scale factor
</parameter_description>
</parameter>
<parameter name="scale_end">
<parameter_description> final scale factor
</parameter_description>
</parameter>
<parameter name="gravity">
<parameter_description> a #ClutterGravity for the scale.
</parameter_description>
</parameter>
</parameters>
<return> the newly created #ClutterBehaviourScale

Since: 0.2
</return>
</function>

<function name="clutter_group_raise">
<description>
FIXME

Deprecated: 0.6: Use clutter_container_raise_child() instead.

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterGroup
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
<parameter name="sibling">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_set_alpha">
<description>
Binds @alpha to a #ClutterBehaviour.  The #ClutterAlpha object
is what makes a behaviour work: for each tick of the timeline
used by #ClutterAlpha a new value of the alpha parameter is
computed by the alpha function; the value should be used by
the #ClutterBehaviour to update one or more properties of the
actors to which the behaviour applies.

Since: 0.2

</description>
<parameters>
<parameter name="behave">
<parameter_description> a #ClutterBehaviour
</parameter_description>
</parameter>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha or %NULL to unset a previously set alpha
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_node_get_object">
<description>
Retrieves the #JsonObject stored inside a #JsonNode


</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
</parameters>
<return> the #JsonObject
</return>
</function>

<function name="clutter_effect_rotate_z">
<description>
Simple effect for rotating a single #ClutterActor about z axis.


</description>
<parameters>
<parameter name="template_">
<parameter_description> A #ClutterEffectTemplate
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> A #ClutterActor to apply the effect to.
</parameter_description>
</parameter>
<parameter name="angle_begin">
<parameter_description> Initial angle to apply to actor
</parameter_description>
</parameter>
<parameter name="angle_end">
<parameter_description> Final angle to apply to actor
</parameter_description>
</parameter>
<parameter name="center_x">
<parameter_description> Position on X axis to rotate about.
</parameter_description>
</parameter>
<parameter name="center_y">
<parameter_description> Position on Y axis to rotate about.
</parameter_description>
</parameter>
<parameter name="direction">
<parameter_description> A #ClutterRotateDirection for the rotation.
</parameter_description>
</parameter>
<parameter name="completed_func">
<parameter_description> A #ClutterEffectCompleteFunc to call on effect
completion or NULL
</parameter_description>
</parameter>
<parameter name="completed_data">
<parameter_description> Data to pass to supplied  #ClutterEffectCompleteFunc
or NULL
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterTimeline for the effect. Will be unreferenced by
the effect when completed.

Since: 0.4
</return>
</function>

<function name="clutter_label_set_line_wrap">
<description>
Toggles line wrapping within the #ClutterLabel widget.  %TRUE makes
it break lines if text exceeds the widget&apos;s size.  %FALSE lets the
text get cut off by the edge of the widget if it exceeds the widget
size.

Since: 0.2

</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
<parameter name="wrap">
<parameter_description> the setting
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_entry_new">
<description>
Creates a new, empty #ClutterEntry.


</description>
<parameters>
</parameters>
<return> the newly created #ClutterEntry
</return>
</function>

<function name="clutter_get_debug_enabled">
<description>
Check if clutter has debugging turned on.


</description>
<parameters>
</parameters>
<return> TRUE if debugging is turned on, FALSE otherwise.
</return>
</function>

<function name="clutter_behaviour_ellipse_set_angle_tiltx">
<description>
Sets the angle at which the ellipse should be tilted around it&apos;s center.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="axis">
<parameter_description> a #ClutterRoateAxis
</parameter_description>
</parameter>
<parameter name="angle_tilt">
<parameter_description> #ClutterAngle tilt of the elipse around the center in the given
axis
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_rotate_get_direction">
<description>
Retrieves the #ClutterRotateDirection used by the rotate behaviour.


</description>
<parameters>
<parameter name="rotate">
<parameter_description> a #ClutterBehaviourRotate
</parameter_description>
</parameter>
</parameters>
<return> the rotation direction

Since: 0.4
</return>
</function>

<function name="clutter_effect_rotate_x">
<description>
Simple effect for rotating a single #ClutterActor about y axis.


</description>
<parameters>
<parameter name="template_">
<parameter_description> A #ClutterEffectTemplate
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> A #ClutterActor to apply the effect to.
</parameter_description>
</parameter>
<parameter name="angle_begin">
<parameter_description> Initial angle to apply to actor
</parameter_description>
</parameter>
<parameter name="angle_end">
<parameter_description> Final angle to apply to actor
</parameter_description>
</parameter>
<parameter name="center_y">
<parameter_description> Position on Y axis to rotate about.
</parameter_description>
</parameter>
<parameter name="center_z">
<parameter_description> Position on Z axis to rotate about.
</parameter_description>
</parameter>
<parameter name="direction">
<parameter_description> A #ClutterRotateDirection for the rotation.
</parameter_description>
</parameter>
<parameter name="completed_func">
<parameter_description> A #ClutterEffectCompleteFunc to call on effect
completion or NULL
</parameter_description>
</parameter>
<parameter name="completed_data">
<parameter_description> Data to pass to supplied  #ClutterEffectCompleteFunc
or NULL
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterTimeline for the effect. Will be unreferenced by
the effect when completed.

Since: 0.4
</return>
</function>

<function name="clutter_behaviour_ellipse_set_direction">
<description>
Sets the rotation direction used by the ellipse behaviour.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="direction">
<parameter_description> the rotation direction
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_ellipse_get_height">
<description>
Gets the height of the elliptical path.


</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
</parameters>
<return> the height of the path

Since: 0.4
</return>
</function>

<function name="clutter_actor_get_ryang">
<description>
Gets the angle of rotation around the Y axis.


</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> the angle of rotation

Since: 0.4
</return>
</function>

<function name="clutter_entry_get_max_length">
<description>
Gets the maximum length of text that can be set into @entry.
See clutter_entry_set_max_length().


</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
</parameters>
<return> the maximum number of characters.

Since: 0.4
</return>
</function>

<function name="clutter_label_set_ellipsize">
<description>
Sets the mode used to ellipsize (add an ellipsis: &quot;...&quot;) to the text 
if there is not enough space to render the entire string.

Since: 0.2

</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
<parameter name="mode">
<parameter_description> a #PangoEllipsizeMode
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_object_unref">
<description>
Decreases by one the reference count of a #JsonObject. If the
reference count reaches zero, the object is destroyed and all
its allocated resources are freed.

</description>
<parameters>
<parameter name="object">
<parameter_description> a #JsonObject
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_get_depth">
<description>
Retrieves the depth of @self.


</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> the depth of a #ClutterActor
</return>
</function>

<function name="ClutterBehaviourBspline">
<description>
This signal is emitted at the end of each frame.

Since: 0.2

</description>
<parameters>
<parameter name="pathb">
<parameter_description> the object which received the signal
</parameter_description>
</parameter>
<parameter name="knot">
<parameter_description> the #ClutterKnot reached
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_media_get_can_seek">
<description>
Retrieves whether @media is seekable or not.


</description>
<parameters>
<parameter name="media">
<parameter_description> A #ClutterMedia object
</parameter_description>
</parameter>
</parameters>
<return> TRUE if @media can seek, FALSE otherwise.
</return>
</function>

<function name="clutter_box_query_child">
<description>
Queries @box for the packing data of @actor.


</description>
<parameters>
<parameter name="box">
<parameter_description> a #ClutterBox
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> child to query
</parameter_description>
</parameter>
<parameter name="child">
<parameter_description> return location for a #ClutterBoxChild or %NULL
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if @actor is a child of @box

Since: 0.4
</return>
</function>

<function name="clutter_label_set_color">
<description>
Sets the color of @label.

</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
<parameter name="color">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_label_set_use_markup">
<description>
Sets whether the text of the label contains markup in &amp;lt;link
linkend=&quot;PangoMarkupFormat&quot;&amp;gt;Pango&apos;s text markup
language&amp;lt;/link&amp;gt;.

</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
<parameter name="setting">
<parameter_description> %TRUE if the label&apos;s text should be parsed for markup.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_entry_delete_chars">
<description>
Characters are removed from before the current postion of the cursor.

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
<parameter name="len">
<parameter_description> the number of characters to remove.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_glx_trap_x_errors">
<description>
FIXME

Since: 0.4

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_actor_event">
<description>
This function is used to emit an event on the main stage.
You should rarely need to use this function, except for
synthetising events.


</description>
<parameters>
<parameter name="actor">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
<parameter name="event">
<parameter_description> a #ClutterEvent
</parameter_description>
</parameter>
<parameter name="capture">
<parameter_description> TRUE if event in in capture phase, FALSE otherwise.
</parameter_description>
</parameter>
</parameters>
<return> the return value from the signal emission: %TRUE
if the actor handled the event, or %FALSE if the event was
not handled

Since: 0.6
</return>
</function>

<function name="clutter_label_set_alignment">
<description>
Sets text alignment of the label.

</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
<parameter name="alignment">
<parameter_description> A #PangoAlignment
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_stage_hide_cursor">
<description>
Makes the cursor invisible on the stage window

Since: 0.4

</description>
<parameters>
<parameter name="stage">
<parameter_description> a #ClutterStage
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_ellipse_get_angle_begin">
<description>
Gets the angle at which movements begins.


</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
</parameters>
<return> angle in degrees

Since: 0.4
</return>
</function>

<function name="clutter_entry_set_max_length">
<description>
Sets the maximum allowed length of the contents of the actor. If the
current contents are longer than the given length, then they will be
truncated to fit.

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
<parameter name="max">
<parameter_description> the maximum number of characters allowed in the entry, or -1
to disable
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_rotate_zx">
<description>
Rotates actor around the Z axis.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="angle">
<parameter_description> Angle of rotation
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description>     X co-ord to rotate actor around ( relative to actor position )
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description>     Y co-ord to rotate actor around ( relative to actor position )
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_color_shade">
<description>
Shades @src by the factor of @shade and saves the modified
color into @dest.

</description>
<parameters>
<parameter name="src">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
<parameter name="dest">
<parameter_description> return location for the shaded color
</parameter_description>
</parameter>
<parameter name="shade">
<parameter_description> the shade factor to apply
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_ellipse_get_center">
<description>
Gets the center of the elliptical path path.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description> location to store the x coordinace of the center, or NULL
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description> location to store the y coordinace of the center, or NULL
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_entry_get_color">
<description>
Retrieves the color of @entry.

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
<parameter name="color">
<parameter_description> return location for a #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_ellipse_get_angle_beginx">
<description>
Gets the angle at which movements begins.


</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterAngle

Since: 0.4
</return>
</function>

<function name="clutter_label_set_line_wrap_mode">
<description>
If line wrapping is on (see clutter_label_set_line_wrap()) this controls how
the line wrapping is done. The default is %PANGO_WRAP_WORD which means
wrap on word boundaries.

Since: 0.2

</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
<parameter name="wrap_mode">
<parameter_description> the line wrapping mode
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="ClutterScore">
<description>
The ::new-timeline signal is emitted each time a new timeline in the
score is reached.

</description>
<parameters>
<parameter name="score">
<parameter_description> the score which received the signal
</parameter_description>
</parameter>
<parameter name="timeline">
<parameter_description> the current timeline
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_stage_get_title">
<description>
Gets the stage title.


</description>
<parameters>
<parameter name="stage">
<parameter_description> A #ClutterStage
</parameter_description>
</parameter>
</parameters>
<return> pointer to the title string for the stage. The
returned string is owned by the actor and should not
be modified or freed.

Since: 0.4
</return>
</function>

<function name="clutter_media_get_buffer_percent">
<description>
Retrieves the amount of the stream that is buffered.


</description>
<parameters>
<parameter name="media">
<parameter_description> A #ClutterMedia object
</parameter_description>
</parameter>
</parameters>
<return> percentage value
</return>
</function>

<function name="clutter_score_add">
<description>
Adds a new initial timeline to start when the score is started.


</description>
<parameters>
<parameter name="score">
<parameter_description> A #ClutterScore
</parameter_description>
</parameter>
<parameter name="timeline">
<parameter_description> A #ClutterTimeline
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_parser_new">
<description>
Creates a new #JsonParser instance. You can use the #JsonParser to
load a JSON stream from either a file or a buffer and then walk the
hierarchy using the data types API.


</description>
<parameters>
</parameters>
<return> the newly created #JsonParser. Use g_object_unref()
to release all the memory it allocates.
</return>
</function>

<function name="clutter_actor_get_size">
<description>
Gets the size of an actor in pixels ignoring any scaling factors.

Since: 0.2

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> Location to store width if non NULL.
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> Location to store height if non NULL.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_group_get_nth_child">
<description>
Gets a groups child held at @index_ in stack.


</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterGroup
</parameter_description>
</parameter>
<parameter name="index_">
<parameter_description> the position of the requested actor.
</parameter_description>
</parameter>
</parameters>
<return> A Clutter actor or NULL if @index_ is invalid.

Since: 0.2
</return>
</function>

<function name="json_node_set_int">
<description>
Sets @value as the integer content of the @node, replacing any existing
content.

</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode of type %JSON_NODE_VALUE
</parameter_description>
</parameter>
<parameter name="value">
<parameter_description> an integer value
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_stage_set_title">
<description>
Sets the stage title.

Since 0.4

</description>
<parameters>
<parameter name="stage">
<parameter_description> A #ClutterStage
</parameter_description>
</parameter>
<parameter name="title">
<parameter_description> A utf8 string for the stage windows title.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_alpha_get_timeline">
<description>
Gets the #ClutterTimeline bound to @alpha.


</description>
<parameters>
<parameter name="alpha">
<parameter_description> A #ClutterAlpha
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterTimeline instance

Since: 0.2
</return>
</function>

<function name="clutter_rectangle_set_border_color">
<description>
Sets the color of the border used by @rectangle using @color

</description>
<parameters>
<parameter name="rectangle">
<parameter_description> a #ClutterRectangle
</parameter_description>
</parameter>
<parameter name="color">
<parameter_description> the color of the border
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_media_get_uri">
<description>
Retrieves the URI from @media.


</description>
<parameters>
<parameter name="media">
<parameter_description> A #ClutterMedia object
</parameter_description>
</parameter>
</parameters>
<return> The URI as a string.
</return>
</function>

<function name="clutter_actor_queue_redraw">
<description>
Queues up a redraw of an actor and any children. The redraw occurs
once the main loop becomes idle (after the current batch of events
has been processed, roughly).

Applications rarely need to call this as redraws are handled automatically
by modification functions.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_entry_set_position">
<description>
Sets the position of the cursor. The @position must be less than or
equal to the number of characters in the entry. A value of -1 indicates
that the position should be set after the last character in the entry.
Note that this position is in characters, not in bytes.

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
<parameter name="position">
<parameter_description> the position of the cursor.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_bspline_join">
<description>
Joins a copy of bezier spline bs2 onto the end of bezier spline bs1; bs2 is
not modified.

Since: 0.4

</description>
<parameters>
<parameter name="bs1">
<parameter_description>      a #ClutterBehaviourBspline
</parameter_description>
</parameter>
<parameter name="bs2">
<parameter_description>      a #ClutterBehaviourBspline
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_texture_set_from_rgb_data">
<description>
Sets #ClutterTexture image data.


</description>
<parameters>
<parameter name="texture">
<parameter_description> A #ClutterTexture
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> Image data in RGB type colorspace.
</parameter_description>
</parameter>
<parameter name="has_alpha">
<parameter_description> Set to TRUE if image data has a alpha channel.
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> Width in pixels of image data.
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> Height in pixels of image data
</parameter_description>
</parameter>
<parameter name="rowstride">
<parameter_description> Distance in bytes between row starts.
</parameter_description>
</parameter>
<parameter name="bpp">
<parameter_description> bytes per pixel ( Currently only 4 supported )
</parameter_description>
</parameter>
<parameter name="flags">
<parameter_description> #ClutterTextureFlags
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> FIXME.
</parameter_description>
</parameter>
</parameters>
<return> TRUE on success, FALSE on failure.

Since 0.4. This function is likely to change in future versions.
</return>
</function>

<function name="clutter_container_add">
<description>
Adds a list of #ClutterActor&amp;lt;!-- --&amp;gt;s to @container. Each time and
actor is added, the &quot;actor-added&quot; signal is emitted. Each actor should
be parented to @container, which takes a reference on the actor. You
cannot add a #ClutterActor to more than one #ClutterContainer.

Since: 0.4

</description>
<parameters>
<parameter name="container">
<parameter_description> a #ClutterContainer
</parameter_description>
</parameter>
<parameter name="first_actor">
<parameter_description> the first #ClutterActor to add
</parameter_description>
</parameter>
<parameter name="Varargs">
<parameter_description> %NULL terminated list of actors to add
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_node_dup_object">
<description>
Retrieves the #JsonObject inside @node. The reference count of
the returned object is increased.


</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
</parameters>
<return> the #JsonObject
</return>
</function>

<function name="clutter_actor_rotate_z">
<description>
Rotates actor around the Z axis.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="angle">
<parameter_description> Angle of rotation
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description>     X co-ord to rotate actor around ( relative to actor position )
</parameter_description>
</parameter>
<parameter name="y">
<parameter_description>     Y co-ord to rotate actor around ( relative to actor position )
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_ellipse_get_angle_tiltx">
<description>
Gets the tilt of the ellipse around the center in the given axis.


</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="axis">
<parameter_description> a #ClutterRotateAxis
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterAngle

Since: 0.4
</return>
</function>

<function name="clutter_actor_rotate_y">
<description>
Rotates actor around the X axis.

</description>
<parameters>
<parameter name="self">
<parameter_description>  A #ClutterActor
</parameter_description>
</parameter>
<parameter name="angle">
<parameter_description> Angle of rotation
</parameter_description>
</parameter>
<parameter name="x">
<parameter_description>     X co-ord to rotate actor around ( relative to actor position )
</parameter_description>
</parameter>
<parameter name="z">
<parameter_description>     Z co-ord to rotate actor around ( relative to actor position )
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_label_get_use_markup">
<description>
Return value: %TRUE if the label&apos;s text will be parsed for markup.

</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the label&apos;s text will be parsed for markup.
</return>
</function>

<function name="clutter_event_new">
<description>
Creates a new #ClutterEvent of the specified type.


</description>
<parameters>
<parameter name="type">
<parameter_description> The type of event.
</parameter_description>
</parameter>
</parameters>
<return> A newly allocated #ClutterEvent.
</return>
</function>

<function name="clutter_button_event_button">
<description>
Retrieve the button number of the event.


</description>
<parameters>
<parameter name="buttev">
<parameter_description> a #ClutterButtonEvent
</parameter_description>
</parameter>
</parameters>
<return> the button number.

Since: 0.4
</return>
</function>

<function name="clutter_container_find_child_by_id">
<description>
Finds a child actor of a container by its unique ID. Search recurses
into any child container.


</description>
<parameters>
<parameter name="container">
<parameter_description> a #ClutterContainer
</parameter_description>
</parameter>
<parameter name="child_id">
<parameter_description> the unique id of an actor
</parameter_description>
</parameter>
</parameters>
<return> The child actor with the requested id, or %NULL if no
actor with that id was found

Since: 0.6
</return>
</function>

<function name="clutter_behaviour_ellipse_get_angle_tilt">
<description>
Gets the tilt of the ellipse around the center in the given axis.


</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="axis">
<parameter_description> a #ClutterRotateAxis
</parameter_description>
</parameter>
</parameters>
<return> angle in degrees.

Since: 0.4
</return>
</function>

<function name="clutter_timeline_set_delay">
<description>
Sets the delay, in milliseconds, before @timeline should start.

Since: 0.4

</description>
<parameters>
<parameter name="timeline">
<parameter_description> a #ClutterTimeline
</parameter_description>
</parameter>
<parameter name="msecs">
<parameter_description> delay in milliseconds
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_timeline_pause">
<description>
Pauses the #ClutterTimeline on current frame

</description>
<parameters>
<parameter name="timeline">
<parameter_description> A #ClutterTimeline
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_eglx_get_default_xdisplay">
<description>
Return value: A Display pointer

</description>
<parameters>
</parameters>
<return> A Display pointer

Since: 0.4
</return>
</function>

<function name="clutter_effect_move">
<description>
Simple effect for moving a single #ClutterActor along a path.


</description>
<parameters>
<parameter name="template_">
<parameter_description> A #ClutterEffectTemplate
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> A #ClutterActor to apply the effect to.
</parameter_description>
</parameter>
<parameter name="knots">
<parameter_description> An array of #ClutterKnots representing path for the actor
</parameter_description>
</parameter>
<parameter name="n_knots">
<parameter_description> Number of #ClutterKnots in passed array.
</parameter_description>
</parameter>
<parameter name="completed_func">
<parameter_description> A #ClutterEffectCompleteFunc to call on effect
completion or %NULL
</parameter_description>
</parameter>
<parameter name="completed_data">
<parameter_description> Data to pass to supplied  #ClutterEffectCompleteFunc
or %NULL
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterTimeline for the effect. Will be unreferenced by
the effect when completed.

Since: 0.4
</return>
</function>

<function name="clutter_actor_show">
<description>
Flags a clutter actor to be displayed. An actor not shown will not
appear on the display.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_set_height">
<description>
Requests a new height for actor

since: 2.0

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> Requested new height for actor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_stage_unfullscreen">
<description>
Asks to toggle off the fullscreen state for the stage window. Note that
you shouldn&apos;t assume the window is definitely not full screen afterward,
because other entities (e.g. the user or window manager) could fullscreen
it again, and not all window managers honor requests to unfullscreen
windows.

</description>
<parameters>
<parameter name="stage">
<parameter_description> a #ClutterStage
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_parser_get_current_line">
<description>
Retrieves the line currently parsed, starting from 1.


</description>
<parameters>
<parameter name="parser">
<parameter_description> a #JsonParser
</parameter_description>
</parameter>
</parameters>
<return> the currently parsed line.
</return>
</function>

<function name="clutter_behaviour_ellipse_get_tiltx">
<description>
Gets the tilt of the ellipse around the center in Y axis.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="angle_tilt_x">
<parameter_description> #ClutterAngle location for tilt of the elipse around the
center in X axis, or NULL.
</parameter_description>
</parameter>
<parameter name="angle_tilt_y">
<parameter_description> #ClutterAngle location for tilt of the elipse around the
center in Y axis, or NULL.
</parameter_description>
</parameter>
<parameter name="angle_tilt_z">
<parameter_description> #ClutterAngle location for tilt of the elipse around the
center in Z axis, or NULL.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_script_unmerge_objects">
<description>
Unmerges the objects identified by @merge_id.

Since: 0.6

</description>
<parameters>
<parameter name="script">
<parameter_description> a #ClutterScript
</parameter_description>
</parameter>
<parameter name="merge_id">
<parameter_description> merge id returned when loading a UI definition
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_entry_set_font_name">
<description>
Sets @font_name as the font used by @entry.

@font_name must be a string containing the font name and its
size, similarly to what you would feed to the
pango_font_description_from_string() function.

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
<parameter name="font_name">
<parameter_description> a font name and size, or %NULL for the default font
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_group_lower">
<description>
FIXME

Deprecated: 0.6: Use clutter_container_lower_child() instead

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterGroup
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
<parameter name="sibling">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_label_get_line_wrap">
<description>
Return value: %TRUE if the lines of the label are automatically wrapped.

</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the lines of the label are automatically wrapped.

Since: 0.2
</return>
</function>

<function name="clutter_event_free">
<description>
Frees all resources used by @event.

</description>
<parameters>
<parameter name="event">
<parameter_description> A #ClutterEvent.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_feature_get_all">
<description>
Return value: a logical OR of all the supported features.

</description>
<parameters>
</parameters>
<return> a logical OR of all the supported features.

Since: 0.1.1
</return>
</function>

<function name="json_parser_get_root">
<description>
Retrieves the top level node from the parsed JSON stream.


</description>
<parameters>
<parameter name="parser">
<parameter_description> a #JsonParser
</parameter_description>
</parameter>
</parameters>
<return> the root #JsonNode . The returned node is owned by
the #JsonParser and should never be modified or freed.
</return>
</function>

<function name="clutter_script_load_from_data">
<description>
Loads the definitions from @data into @script and merges with
the currently loaded ones, if any.


</description>
<parameters>
<parameter name="script">
<parameter_description> a #ClutterScript
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> a buffer containing the definitions
</parameter_description>
</parameter>
<parameter name="length">
<parameter_description> the length of the buffer, or -1 if @data is a NUL-terminated
buffer
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError, or %NULL
</parameter_description>
</parameter>
</parameters>
<return> on error, zero is returned and @error is set
accordingly. On success, the merge id for the UI definitions is
returned. You can use the merge id with clutter_script_unmerge().

Since: 0.6
</return>
</function>

<function name="clutter_actor_set_clip">
<description>
Sets clip area in pixels for @self.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="xoff">
<parameter_description> X offset of the clip rectangle
</parameter_description>
</parameter>
<parameter name="yoff">
<parameter_description> Y offset of the clip rectangle
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> Width of the clip rectangle
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> Height of the clip rectangle
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_get_coords">
<description>
Gets the actors untransformed bounding rectangle co-ordinates in pixels
relative to any parent actor.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="x_1">
<parameter_description> A location to store actors left position, or %NULL.
</parameter_description>
</parameter>
<parameter name="y_1">
<parameter_description> A location to store actors top position, or %NULL.
</parameter_description>
</parameter>
<parameter name="x_2">
<parameter_description> A location to store actors right position, or %NULL.
</parameter_description>
</parameter>
<parameter name="y_2">
<parameter_description> A location to store actors bottom position, or %NULL.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_get_parent">
<description>
Retrieves the parent of @self.


</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> The #ClutterActor parent or NULL
</return>
</function>

<function name="clutter_timeline_set_loop">
<description>
Sets whether @timeline should loop.

</description>
<parameters>
<parameter name="timeline">
<parameter_description> a #ClutterTimeline
</parameter_description>
</parameter>
<parameter name="loop">
<parameter_description> %TRUE for enable looping
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="ClutterTexture">
<description>
The ::pixbuf-change signal is emitted each time the pixbuf
used by @texture changes.

</description>
<parameters>
<parameter name="texture">
<parameter_description> the texture which received the signal
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_group_remove">
<description>
Removes a child #ClutterActor from the parent #ClutterGroup.

@Deprecated: 0.4: This function is obsolete, use
clutter_container_remove_actor() instead.

</description>
<parameters>
<parameter name="group">
<parameter_description> A #ClutterGroup
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_timeout_pool_remove">
<description>
Removes a timeout function with @id from the timeout pool. The id
is the same returned when adding a function to the timeout pool with
clutter_timeout_pool_add().

Since: 0.4

</description>
<parameters>
<parameter name="pool">
<parameter_description> a #ClutterTimeoutPool
</parameter_description>
</parameter>
<parameter name="id">
<parameter_description> the id of the timeout to remove
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_texture_get_n_tiles">
<description>
Retreives internal tile dimentioning.

This function is only useful for sub class implementations
and never should be called by an application.

</description>
<parameters>
<parameter name="texture">
<parameter_description> A #ClutterTexture
</parameter_description>
</parameter>
<parameter name="n_x_tiles">
<parameter_description> Location to store number of tiles in horizonally axis
</parameter_description>
</parameter>
<parameter name="n_y_tiles">
<parameter_description> Location to store number of tiles in vertical axis
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_label_set_attributes">
<description>
Sets a #PangoAttrList; the attributes in the list are applied to the
label text. The attributes set with this function will be ignored
if the &quot;use_markup&quot; property
is %TRUE.

Since: 0.2

</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
<parameter name="attrs">
<parameter_description> a #PangoAttrList
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_box_set_default_padding">
<description>
Sets the default padding for children, which will be used when
packing actors with clutter_box_pack_defaults(). The padding is
given in pixels.

Since: 0.4

</description>
<parameters>
<parameter name="box">
<parameter_description> a #ClutterBox
</parameter_description>
</parameter>
<parameter name="padding_top">
<parameter_description> top padding, in pixels
</parameter_description>
</parameter>
<parameter name="padding_right">
<parameter_description> right padding, in pixels
</parameter_description>
</parameter>
<parameter name="padding_bottom">
<parameter_description> bottom padding, in pixels
</parameter_description>
</parameter>
<parameter name="padding_left">
<parameter_description> left padding, in pixels
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_timeline_new_for_duration">
<description>
Creates a new #ClutterTimeline with a duration of @msecs using
the value of the ClutterTimeline:fps property to compute the
equivalent number of frames.


</description>
<parameters>
<parameter name="msecs">
<parameter_description> Duration of the timeline in milliseconds
</parameter_description>
</parameter>
</parameters>
<return> the newly created #ClutterTimeline

Since: 0.6
</return>
</function>

<function name="clutter_behaviour_ellipse_set_angle_beginx">
<description>
Sets the angle at which movement begins.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="angle_begin">
<parameter_description> #ClutterAngle at which movement begins
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="ClutterEffectTemplate">
<description>
Controls if effects should clone or reference the templated timeline

Since: 0.6

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_actor_set_geometry">
<description>
Sets the actors untransformed geometry in pixels relative to any
parent actor.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="geometry">
<parameter_description> A #ClutterGeometry
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_get_timestamp">
<description>
Return value: Number of microseconds since clutter_init() was called.

</description>
<parameters>
</parameters>
<return> Number of microseconds since clutter_init() was called.
</return>
</function>

<function name="clutter_alpha_new_full">
<description>
Creates a new #ClutterAlpha instance and sets the timeline
and alpha function.


</description>
<parameters>
<parameter name="timeline">
<parameter_description> #ClutterTimeline timeline
</parameter_description>
</parameter>
<parameter name="func">
<parameter_description> #ClutterAlphaFunc alpha function
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> data to be passed to the alpha function
</parameter_description>
</parameter>
<parameter name="destroy">
<parameter_description> notify to be called when removing the alpha function
</parameter_description>
</parameter>
</parameters>
<return> the newly created #ClutterAlpha

Since: 0.2
</return>
</function>

<function name="clutter_texture_set_pixbuf">
<description>
Sets a  #ClutterTexture image data from a #GdkPixbuf. In case of
failure, %FALSE is returned and @error is set.


</description>
<parameters>
<parameter name="texture">
<parameter_description> A #ClutterTexture
</parameter_description>
</parameter>
<parameter name="pixbuf">
<parameter_description> A #GdkPixbuf
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> Return location for a #GError, or %NULL
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the pixbuf was successfully set

Since: 0.4
</return>
</function>

<function name="clutter_ramp_dec_func">
<description>
Convenience alpha function for a monotonic decreasing ramp. You
can use this function as the alpha function for clutter_alpha_set_func().


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="dummy">
<parameter_description> unused argument
</parameter_description>
</parameter>
</parameters>
<return> an alpha value.

Since: 0.2
</return>
</function>

<function name="clutter_behaviour_opacity_new">
<description>
Creates a new #ClutterBehaviourOpacity object, driven by @alpha
which controls the opacity property of every actor, making it
change in the interval between @opacity_start and @opacity_end.


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha instance, or %NULL
</parameter_description>
</parameter>
<parameter name="opacity_start">
<parameter_description> minimum level of opacity
</parameter_description>
</parameter>
<parameter name="opacity_end">
<parameter_description> maximum level of opacity
</parameter_description>
</parameter>
</parameters>
<return> the newly created #ClutterBehaviourOpacity

Since: 0.2
</return>
</function>

<function name="json_node_get_parent">
<description>
Retrieves the parent #JsonNode of @node.


</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
</parameters>
<return> the parent node, or %NULL if @node is the root node
</return>
</function>

<function name="clutter_timeline_new">
<description>
Create a new  #ClutterTimeline instance.


</description>
<parameters>
<parameter name="n_frames">
<parameter_description> the number of frames
</parameter_description>
</parameter>
<parameter name="fps">
<parameter_description> the number of frames per second
</parameter_description>
</parameter>
</parameters>
<return> a new #ClutterTimeline
</return>
</function>

<function name="json_node_dup_array">
<description>
Retrieves the #JsonArray stored inside a #JsonNode and returns it
with its reference count increased by one.


</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
</parameters>
<return> the #JsonArray with its reference count increased.
</return>
</function>

<function name="clutter_container_lower_child">
<description>
Lowers @actor at @sibling level, in the depth ordering.

Since: 0.6

</description>
<parameters>
<parameter name="container">
<parameter_description> a #ClutterContainer
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> the actor to raise
</parameter_description>
</parameter>
<parameter name="sibling">
<parameter_description> the sibling to lower to, or %NULL to lower at the bottom
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_texture_new">
<description>
Creates a new empty #ClutterTexture object.


</description>
<parameters>
</parameters>
<return> A newly created #ClutterTexture object.
</return>
</function>

<function name="clutter_actor_raise">
<description>
Puts @self above @below.
Both actors must have the same parent.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="below">
<parameter_description> A #ClutterActor to raise above.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_rotate_newx">
<description>
Creates a new #ClutterBehaviourRotate. This is the fixed point version
of clutter_behaviour_rotate_new().


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha or %NULL
</parameter_description>
</parameter>
<parameter name="axis">
<parameter_description> the rotation axis
</parameter_description>
</parameter>
<parameter name="direction">
<parameter_description> the rotation direction
</parameter_description>
</parameter>
<parameter name="angle_begin">
<parameter_description> the starting angle, in fixed point notation
</parameter_description>
</parameter>
<parameter name="angle_end">
<parameter_description> the final angle, in fixed point notation
</parameter_description>
</parameter>
</parameters>
<return> the newly created #ClutterBehaviourRotate.

Since: 0.4
</return>
</function>

<function name="clutter_texture_set_from_yuv_data">
<description>
Sets a #ClutterTexture from YUV image data. If an error occurred,
%FALSE is returned and @error is set.

This function is likely to change in future versions.


</description>
<parameters>
<parameter name="texture">
<parameter_description> A #ClutterTexture
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> Image data in RGB type colorspace.
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> Width in pixels of image data.
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> Height in pixels of image data
</parameter_description>
</parameter>
<parameter name="flags">
<parameter_description> #ClutterTextureFlags
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> Return location for a #GError, or %NULL.
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the texture was successfully updated

Since 0.4.
</return>
</function>

<function name="clutter_stage_set_perspective">
<description>
Set the stage perspective.

Since: 0.4

</description>
<parameters>
<parameter name="stage">
<parameter_description> A #ClutterStage
</parameter_description>
</parameter>
<parameter name="fovy">
<parameter_description> FIXME
</parameter_description>
</parameter>
<parameter name="aspect">
<parameter_description> FIXME
</parameter_description>
</parameter>
<parameter name="z_near">
<parameter_description> FIXME
</parameter_description>
</parameter>
<parameter name="z_far">
<parameter_description> FIXME
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_threads_add_timeout_full">
<description>
Sets a function to be called at regular intervals holding the Clutter lock,
with the given priority.  The function is called repeatedly until it 
Return value: the ID (greater than 0) of the event source.

</description>
<parameters>
<parameter name="priority">
<parameter_description> the priority of the timeout source. Typically this will be in the
range between #G_PRIORITY_DEFAULT and #G_PRIORITY_HIGH.
</parameter_description>
</parameter>
<parameter name="interval">
<parameter_description> the time between calls to the function, in milliseconds
</parameter_description>
</parameter>
<parameter name="func">
<parameter_description> function to call
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> data to pass to the function
</parameter_description>
</parameter>
<parameter name="notify">
<parameter_description> function to call when the timeout source is removed
</parameter_description>
</parameter>
</parameters>
<return> the ID (greater than 0) of the event source.

Since: 0.4
</return>
</function>

<function name="clutter_log2x">
<description>
Calculates base 2 logarithm.

This function is some 2.5 times faster on x86, and over 12 times faster on
fpu-less arm, than using libc log().


</description>
<parameters>
<parameter name="x">
<parameter_description> value to calculate base 2 logarithm from
</parameter_description>
</parameter>
</parameters>
<return> base 2 logarithm.

Since: 0.4
</return>
</function>

<function name="json_node_free">
<description>
Frees the resources allocated by @node.

</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_threads_leave">
<description>
Unlocks the Clutter thread lock.

Since: 0.4

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_timeline_get_duration">
<description>
Retrieves the duration of a #ClutterTimeline in milliseconds.
See clutter_timeline_set_duration().


</description>
<parameters>
<parameter name="timeline">
<parameter_description> a #ClutterTimeline
</parameter_description>
</parameter>
</parameters>
<return> the duration of the timeline, in milliseconds.

Since: 0.6
</return>
</function>

<function name="clutter_entry_get_invisible_char">
<description>
Return value: a Unicode character

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
</parameters>
<return> a Unicode character

</return>
</function>

<function name="clutter_actor_has_clip">
<description>
Gets whether the actor has a clip set or not.


</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the actor has a clip set.

Since: 0.1.1
</return>
</function>

<function name="clutter_key_event_symbol">
<description>
Retrieves the value of the key that caused @keyev.


</description>
<parameters>
<parameter name="keyev">
<parameter_description> A #ClutterKeyEvent
</parameter_description>
</parameter>
</parameters>
<return> The keysym representing the key
</return>
</function>

<function name="clutter_timeline_get_delay">
<description>
Retrieves the delay set using clutter_timeline_set_delay().


</description>
<parameters>
<parameter name="timeline">
<parameter_description> a #ClutterTimeline
</parameter_description>
</parameter>
</parameters>
<return> the delay in milliseconds.

Since: 0.4
</return>
</function>

<function name="json_parser_load_from_file">
<description>
Loads a JSON stream from the content of @filename and parses it. See
json_parser_load_from_data().


</description>
<parameters>
<parameter name="parser">
<parameter_description> a #JsonParser
</parameter_description>
</parameter>
<parameter name="filename">
<parameter_description> the path for the file to parse
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError, or %NULL
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the file was successfully loaded and parsed.
In case of error, @error is set accordingly and %FALSE is returned
</return>
</function>

<function name="clutter_layout_height_for_width">
<description>
Queries a #ClutterLayout actor for its height with a known width.

Since: 0.4

</description>
<parameters>
<parameter name="layout">
<parameter_description> a #ClutterLayout
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> width allocated by the parent
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> return location for the height
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_rectangle_set_border_width">
<description>
Sets the width (in pixel) of the border used by @rectangle.
A @width of 0 will unset the border.

Since: 0.2

</description>
<parameters>
<parameter name="rectangle">
<parameter_description> a #ClutterRectangle
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> the width of the border
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_clone_texture_get_parent_texture">
<description>
Retrieves the parent #ClutterTexture used by @clone.


</description>
<parameters>
<parameter name="clone">
<parameter_description> a #ClutterCloneTexture
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterTexture actor, or %NULL

Since: 0.2
</return>
</function>

<function name="clutter_stage_show_cursor">
<description>
Shows the cursor on the stage window

</description>
<parameters>
<parameter name="stage">
<parameter_description> a #ClutterStage
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_event_get_state">
<description>
Retrieves the modifier state of the event.


</description>
<parameters>
<parameter name="event">
<parameter_description> a #ClutterEvent
</parameter_description>
</parameter>
</parameters>
<return> the modifier state parameter, or 0

Since: 0.4
</return>
</function>

<function name="clutter_timeline_skip">
<description>
Advance timeline by requested number of frames.

</description>
<parameters>
<parameter name="timeline">
<parameter_description> A #ClutterTimeline
</parameter_description>
</parameter>
<parameter name="n_frames">
<parameter_description> Number of frames to skip
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_get_n_actors">
<description>
Gets the number of actors this behaviour is applied too.


</description>
<parameters>
<parameter name="behave">
<parameter_description> a #ClutterBehaviour
</parameter_description>
</parameter>
</parameters>
<return> The number of applied actors 

Since: 0.2
</return>
</function>

<function name="clutter_box_get_margin">
<description>
Gets the value set using clutter_box_set_margin().

Since: 0.4

</description>
<parameters>
<parameter name="box">
<parameter_description> a #ClutterBox
</parameter_description>
</parameter>
<parameter name="margin">
<parameter_description> return location for a #ClutterMargin
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_set_opacity">
<description>
Sets the actors opacity, with zero being completely transparent.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="opacity">
<parameter_description> New opacity value for actor.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="JsonGenerator">
<description>
Number of spaces to be used to indent when pretty printing.

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_timeline_advance">
<description>
Advance timeline to requested frame number

</description>
<parameters>
<parameter name="timeline">
<parameter_description> A #ClutterTimeline
</parameter_description>
</parameter>
<parameter name="frame_num">
<parameter_description> Frame number to advance to
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_bspline_split">
<description>
Splits a bezier spline into two at the control point at offset; if the
control point at offset is not one of the on-curve bezier points, the
bspline will be split at the nearest on-curve point before the offset.
The original bspline is shortened appropriately.


</description>
<parameters>
<parameter name="bs">
<parameter_description> a #ClutterBehaviourBspline
</parameter_description>
</parameter>
<parameter name="offset">
<parameter_description> an offset of the control point at which to split the spline.
</parameter_description>
</parameter>
</parameters>
<return> new ClutterBehaviourBspline.

Since: 0.4
</return>
</function>

<function name="json_generator_to_data">
<description>
Generates a JSON data stream from @generator and returns it as a
buffer.


</description>
<parameters>
<parameter name="generator">
<parameter_description> a #JsonGenerator
</parameter_description>
</parameter>
<parameter name="length">
<parameter_description> return location for the length of the returned buffer, or %NULL
</parameter_description>
</parameter>
</parameters>
<return> a newly allocated buffer holding a JSON data stream. Use
g_free() to free the allocated resources.
</return>
</function>

<function name="clutter_texture_get_x_tile_detail">
<description>
Retreives details of a tile on x axis.

This function is only useful for sub class implementations
and never should be called by an application.

</description>
<parameters>
<parameter name="texture">
<parameter_description> A #ClutterTexture
</parameter_description>
</parameter>
<parameter name="x_index">
<parameter_description> X index of tile to query
</parameter_description>
</parameter>
<parameter name="pos">
<parameter_description> Location to store tiles X position
</parameter_description>
</parameter>
<parameter name="size">
<parameter_description> Location to store tiles horizontal size in pixels
</parameter_description>
</parameter>
<parameter name="waste">
<parameter_description> Location to store tiles horizontal wastage in pixels
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_set_depth">
<description>
Sets the Z co-ordinate of @self to @depth. The Units of which are dependant
on the perspective setup.

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
<parameter name="depth">
<parameter_description> Z co-ord
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_init">
<description>
It will initialise everything needed to operate with Clutter and
parses some standard command line options. @argc and @argv are
adjusted accordingly so your own code will never see those standard
arguments.


</description>
<parameters>
<parameter name="argc">
<parameter_description> The number of arguments in @argv
</parameter_description>
</parameter>
<parameter name="argv">
<parameter_description> A pointer to an array of arguments.
</parameter_description>
</parameter>
</parameters>
<return> 1 on success, &amp;lt; 0 on failure.
</return>
</function>

<function name="clutter_media_get_playing">
<description>
Retrieves the state of @media.


</description>
<parameters>
<parameter name="media">
<parameter_description> A #ClutterMedia object
</parameter_description>
</parameter>
</parameters>
<return> TRUE if playing, FALSE if stopped.
</return>
</function>

<function name="clutter_timeline_set_speed">
<description>
Set the speed in frames per second of the timeline.

</description>
<parameters>
<parameter name="timeline">
<parameter_description> A #ClutterTimeline
</parameter_description>
</parameter>
<parameter name="fps">
<parameter_description> New speed of timeline as frames per second
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="ClutterBehaviourEllipse">
<description>
The direction of the rotation.

Since: 0.4

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_clone_texture_new">
<description>
Creates an efficient &apos;clone&apos; of a pre-existing texture if which it 
shares the underlying pixbuf data.

You can use clutter_clone_texture_set_parent_texture() to change the
parent texture to be cloned.


</description>
<parameters>
<parameter name="texture">
<parameter_description> a #ClutterTexture or %NULL
</parameter_description>
</parameter>
</parameters>
<return> the newly created #ClutterCloneTexture
</return>
</function>

<function name="clutter_actor_get_ryangx">
<description>
Gets the angle of rotation around the Y axis.


</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> the angle of rotation, as a fixed point value

Since: 0.4
</return>
</function>

<function name="clutter_glx_get_root_window">
<description>
FIXME


</description>
<parameters>
</parameters>
<return> FIXME

Since: 0.4
</return>
</function>

<function name="clutter_texture_new_from_pixbuf">
<description>
Creates a new #ClutterTexture object.


</description>
<parameters>
<parameter name="pixbuf">
<parameter_description> A #GdkPixbuf
</parameter_description>
</parameter>
</parameters>
<return> A newly created #ClutterTexture object.
</return>
</function>

<function name="clutter_color_to_string">
<description>
Return value: a newly-allocated text string

</description>
<parameters>
<parameter name="color">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return> a newly-allocated text string

Since: 0.2
</return>
</function>

<function name="clutter_actor_show_all">
<description>
Call show() on all children of a actor (if any).

Since: 0.2

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_box_set_margin">
<description>
Sets the margin, in #ClutterUnit&amp;lt;!-- --&amp;gt;s, between the inner border
of the box and the children of the box.

Since: 0.4

</description>
<parameters>
<parameter name="box">
<parameter_description> a #ClutterBox
</parameter_description>
</parameter>
<parameter name="margin">
<parameter_description> a #ClutterMargin, or %NULL to unset the margin
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="ClutterRectangle">
<description>
Whether the #ClutterRectangle should be displayed with a border.

Since: 0.2

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_rectangle_get_border_color">
<description>
Gets the color of the border used by @rectangle and places
it into @color.

Since: 0.2

</description>
<parameters>
<parameter name="rectangle">
<parameter_description> a #ClutterRectangle
</parameter_description>
</parameter>
<parameter name="color">
<parameter_description> return location for a #ClutterColor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_bspline_new">
<description>
Creates a new bezier spline behaviour. You can use this behaviour to drive
actors along the bezier spline, described by the @knots control points.

Bspline is defined by 3n + 1 points, n &amp;gt;=1; any trailing points passed
into this function are stored internally and used during any subsequent
clutter_behaviour_bspline_append() operations.


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha, or %NULL
</parameter_description>
</parameter>
<parameter name="knots">
<parameter_description> a list of #ClutterKnots representing individual control points
</parameter_description>
</parameter>
<parameter name="n_knots">
<parameter_description> the number of control points
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterBehaviour

Since: 0.4
</return>
</function>

<function name="clutter_script_get_type_from_name">
<description>
Looks up a type by name, using the virtual function that 
#ClutterScript has for that purpose. This function should
rarely be used.


</description>
<parameters>
<parameter name="script">
<parameter_description> a #ClutterScript
</parameter_description>
</parameter>
<parameter name="type_name">
<parameter_description> name of the type to look up
</parameter_description>
</parameter>
</parameters>
<return> the type for the requested type name, or
%G_TYPE_INVALID if not corresponding type was found.

Since: 0.6
</return>
</function>

<function name="ClutterTimeline">
<description>
The ::paused signal is emitted when clutter_timeline_pause() is invoked.

</description>
<parameters>
<parameter name="timeline">
<parameter_description> the #ClutterTimeline which received the signal
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_depth_new">
<description>
Creates a new #ClutterBehaviourDepth which can be used to control
the ClutterActor:depth property of a set of #ClutterActor&amp;lt;!-- --&amp;gt;s.


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha or %NULL
</parameter_description>
</parameter>
<parameter name="start_depth">
<parameter_description> start depth
</parameter_description>
</parameter>
<parameter name="end_depth">
<parameter_description> end depth 
</parameter_description>
</parameter>
</parameters>
<return> the newly created behaviour

Since: 0.4
</return>
</function>

<function name="clutter_box_get_default_padding">
<description>
Gets the default padding set with clutter_box_set_default_padding().

Since: 0.4

</description>
<parameters>
<parameter name="box">
<parameter_description> a #ClutterBox
</parameter_description>
</parameter>
<parameter name="padding_top">
<parameter_description> return location for the top padding, or %NULL
</parameter_description>
</parameter>
<parameter name="padding_right">
<parameter_description> return location for the right padding, or %NULL
</parameter_description>
</parameter>
<parameter name="padding_bottom">
<parameter_description> return location for the bottom padding, or %NULL
</parameter_description>
</parameter>
<parameter name="padding_left">
<parameter_description> return location for the left padding, or %NULL
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_node_get_array">
<description>
Retrieves the #JsonArray stored inside a #JsonNode


</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
</parameters>
<return> the #JsonArray
</return>
</function>

<function name="clutter_texture_get_pixbuf">
<description>
Gets a #GdkPixbuf representation of the #ClutterTexture data.
The created #GdkPixbuf is not owned by the texture but the caller.


</description>
<parameters>
<parameter name="texture">
<parameter_description> A #ClutterTexture
</parameter_description>
</parameter>
</parameters>
<return> A #GdkPixbuf
</return>
</function>

<function name="clutter_score_start">
<description>
Query state of a #ClutterScore instance.


</description>
<parameters>
<parameter name="score">
<parameter_description> A #ClutterScore
</parameter_description>
</parameter>
</parameters>
<return> TRUE if score is currently playing, FALSE if not.
</return>
</function>

<function name="clutter_actor_get_scalex">
<description>
Retrieves an actors scale in fixed point.

Since: 0.2

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="scale_x">
<parameter_description> Location to store horizonal fixed scale factor if non NULL.
</parameter_description>
</parameter>
<parameter name="scale_y">
<parameter_description> Location to store vertical fixed scale factor if non NULL.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_node_set_string">
<description>
Sets @value as the string content of the @node, replacing any existing
content.

</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode of type %JSON_NODE_VALUE
</parameter_description>
</parameter>
<parameter name="value">
<parameter_description> a string value
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_set_scalex">
<description>
Scales an actor with fixed point parameters.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="scale_x">
<parameter_description> #ClutterFixed factor to scale actor by horizontally.
</parameter_description>
</parameter>
<parameter name="scale_y">
<parameter_description> #ClutterFixed factor to scale actor by vertically.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_color_add">
<description>
Adds @src2 to @src1 and saves the resulting color
inside @dest.

The alpha channel of @dest is as the maximum value
between the alpha channels of @src1 and @src2.

</description>
<parameters>
<parameter name="src1">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
<parameter name="src2">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
<parameter name="dest">
<parameter_description> return location for the result
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_is_applied">
<description>
Check if @behave applied to  @actor.


</description>
<parameters>
<parameter name="behave">
<parameter_description> a #ClutterBehaviour
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> TRUE if actor has behaviour. FALSE otherwise.

Since: 0.4
</return>
</function>

<function name="clutter_entry_delete_text">
<description>
Deletes a sequence of characters. The characters that are deleted are
those characters at positions from @start_pos up to, but not including,
@end_pos. If @end_pos is negative, then the characters deleted will be
those characters from @start_pos to the end of the text.

Since: 0.4

</description>
<parameters>
<parameter name="entry">
<parameter_description> a #ClutterEntry
</parameter_description>
</parameter>
<parameter name="start_pos">
<parameter_description> the starting position.
</parameter_description>
</parameter>
<parameter name="end_pos">
<parameter_description> the end position.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_backend_set_double_click_distance">
<description>
Sets the maximum distance used to verify a double click event.

Since: 0.4

</description>
<parameters>
<parameter name="backend">
<parameter_description> a #ClutterBackend
</parameter_description>
</parameter>
<parameter name="distance">
<parameter_description> a distance, in pixels
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_node_set_boolean">
<description>
Sets @value as the boolean content of the @node, replacing any existing
content.

</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode of type %JSON_NODE_VALUE
</parameter_description>
</parameter>
<parameter name="value">
<parameter_description> a boolean value
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_main">
<description>
Starts the Clutter mainloop.

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_get_actors">
<description>
Retrieves all the actors to which @behave applies. It is not recommended
for derived classes to use this in there alpha notify method but use 
#clutter_behaviour_actors_foreach as it avoids alot of needless allocations.


</description>
<parameters>
<parameter name="behave">
<parameter_description> a #ClutterBehaviour
</parameter_description>
</parameter>
</parameters>
<return> a list of actors. You should free the returned list
with g_slist_free() when finished using it.

Since: 0.2
</return>
</function>

<function name="clutter_glx_remove_filter">
<description>
Removes @func from the list of filter functions installed

Since: 0.4

</description>
<parameters>
<parameter name="func">
<parameter_description> the filter function to remove
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> user data of the filter function, or %NULL
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_get_id">
<description>
Retrieves the unique id for @self.


</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> Globally unique value for object instance.
</return>
</function>

<function name="clutter_color_lighten">
<description>
Lightens @src by a fixed amount, and saves the changed
color in @dest.

</description>
<parameters>
<parameter name="src">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
<parameter name="dest">
<parameter_description> return location for the lighter color
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_node_get_double">
<description>
Gets the double value stored inside a #JsonNode


</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode of type %JSON_NODE_VALUE
</parameter_description>
</parameter>
</parameters>
<return> a double value.
</return>
</function>

<function name="clutter_event_get_time">
<description>
Retrieves the time of the event.


</description>
<parameters>
<parameter name="event">
<parameter_description> a #ClutterEvent
</parameter_description>
</parameter>
</parameters>
<return> the time of the event, or %CLUTTER_CURRENT_TIME

Since: 0.4
</return>
</function>

<function name="clutter_effect_template_get_timeline_clone">
<description>
Gets whether timelines should be cloned when creating a new
effect or just referenced.


</description>
<parameters>
<parameter name="template_">
<parameter_description>  A #ClutterEffectTemplate
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if the templates timeline is to be cloned.

Since: 0.6
</return>
</function>

<function name="clutter_group_new">
<description>
Create a new  #ClutterGroup instance.


</description>
<parameters>
</parameters>
<return>a new #ClutterGroup
</return>
</function>

<function name="clutter_behaviour_path_clear">
<description>
Removes all knots from a path

Since: 0.2

</description>
<parameters>
<parameter name="pathb">
<parameter_description> a #ClutterBehvaiourPath
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_label_get_ellipsize">
<description>
Return value: #PangoEllipsizeMode

</description>
<parameters>
<parameter name="label">
<parameter_description> a #ClutterLabel
</parameter_description>
</parameter>
</parameters>
<return> #PangoEllipsizeMode

Since: 0.2
</return>
</function>

<function name="clutter_behaviour_ellipse_get_width">
<description>
Gets the width of the elliptical path.


</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
</parameters>
<return> the width of the path

Since: 0.4
</return>
</function>

<function name="clutter_get_show_fps">
<description>
Return value: %TRUE if Clutter should show the FPS.

</description>
<parameters>
</parameters>
<return> %TRUE if Clutter should show the FPS.

Since: 0.4
</return>
</function>

<function name="clutter_actor_get_rzangx">
<description>
Gets the angle of rotation around x axis in degrees.


</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> the angle of rotation, as a fixed point value

Since: 0.4
</return>
</function>

<function name="clutter_actor_get_abs_size">
<description>
Gets the absolute size of an actor taking into account
an scaling factors

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> Location to store width if non NULL.
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> Location to store height if non NULL.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_threads_enter">
<description>
Locks the Clutter thread lock.

Since: 0.4

</description>
<parameters>
</parameters>
<return></return>
</function>

<function name="clutter_key_event_code">
<description>
Retrieves the keycode of the key that caused @keyev.


</description>
<parameters>
<parameter name="keyev">
<parameter_description> A #ClutterKeyEvent
</parameter_description>
</parameter>
</parameters>
<return> The keycode representing the key
</return>
</function>

<function name="clutter_sinx">
<description>
Fixed point implementation of sine function


</description>
<parameters>
<parameter name="angle">
<parameter_description> a #ClutterFixed angle in radians
</parameter_description>
</parameter>
</parameters>
<return> #ClutterFixed sine value.

Since: 0.2
</return>
</function>

<function name="clutter_box_pack">
<description>
Packs @actor into @box.

Since: 0.4

</description>
<parameters>
<parameter name="box">
<parameter_description> a #ClutterBox
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> a #ClutterActor to pack into the box
</parameter_description>
</parameter>
<parameter name="pack_type">
<parameter_description> Type of packing to use
</parameter_description>
</parameter>
<parameter name="padding">
<parameter_description> padding to use on the actor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_container_remove_valist">
<description>
Alternative va_list version of clutter_container_remove().

Since: 0.4

</description>
<parameters>
<parameter name="container">
<parameter_description> a #ClutterContainer
</parameter_description>
</parameter>
<parameter name="first_actor">
<parameter_description> the first #ClutterActor to add
</parameter_description>
</parameter>
<parameter name="var_args">
<parameter_description> list of actors to remove, followed by %NULL
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_set_size">
<description>
Sets the actors size in pixels.

</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
<parameter name="width">
<parameter_description> New width of actor in pixels
</parameter_description>
</parameter>
<parameter name="height">
<parameter_description> New height of actor in pixels
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_effect_rotate_y">
<description>
Simple effect for rotating a single #ClutterActor about y axis.


</description>
<parameters>
<parameter name="template_">
<parameter_description> A #ClutterEffectTemplate
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> A #ClutterActor to apply the effect to.
</parameter_description>
</parameter>
<parameter name="angle_begin">
<parameter_description> Initial angle to apply to actor
</parameter_description>
</parameter>
<parameter name="angle_end">
<parameter_description> Final angle to apply to actor
</parameter_description>
</parameter>
<parameter name="center_x">
<parameter_description> Position on X axis to rotate about.
</parameter_description>
</parameter>
<parameter name="center_z">
<parameter_description> Position on Z axis to rotate about.
</parameter_description>
</parameter>
<parameter name="direction">
<parameter_description> A #ClutterRotateDirection for the rotation.
</parameter_description>
</parameter>
<parameter name="completed_func">
<parameter_description> A #ClutterEffectCompleteFunc to call on effect
completion or NULL
</parameter_description>
</parameter>
<parameter name="completed_data">
<parameter_description> Data to pass to supplied  #ClutterEffectCompleteFunc
or NULL
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterTimeline for the effect. Will be unreferenced by
the effect when completed.

Since: 0.4
</return>
</function>

<function name="clutter_actor_hide_all">
<description>
Call hide() on all child actors (if any).

Since: 0.2

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="json_node_copy">
<description>
Copies @node. If the node contains complex data types then the reference
count of the objects is increased.


</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
</parameters>
<return> the copied #JsonNode
</return>
</function>

<function name="clutter_rectangle_new">
<description>
Creates a new #ClutterActor with a rectangular shape.


</description>
<parameters>
</parameters>
<return> a new #ClutterActor
</return>
</function>

<function name="clutter_pow2x">
<description>
Calculates 2 to x power.

This function is around 11 times faster on x86, and around 22 times faster
on fpu-less arm than libc pow(2, x).


</description>
<parameters>
<parameter name="x">
<parameter_description> exponent
</parameter_description>
</parameter>
</parameters>
<return> 2 in x power.

Since: 0.4
</return>
</function>

<function name="clutter_backend_set_double_click_time">
<description>
Sets the maximum time between two button press events, used to
verify whether it&apos;s a double click event or not.

Since: 0.4

</description>
<parameters>
<parameter name="backend">
<parameter_description> a #ClutterBackend
</parameter_description>
</parameter>
<parameter name="msec">
<parameter_description> milliseconds between two button press events
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_knot_free">
<description>
Frees the memory of an allocated knot.

Since: 0.2

</description>
<parameters>
<parameter name="knot">
<parameter_description> a #ClutterKnot
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_bspline_adjust">
<description>
Change the coordinaces of control point at index to those represented by
the knot.

Since: 0.4

</description>
<parameters>
<parameter name="bs">
<parameter_description> a #ClutterBehaviourBspline
</parameter_description>
</parameter>
<parameter name="offset">
<parameter_description> an index of control point to ajdust
</parameter_description>
</parameter>
<parameter name="knot">
<parameter_description> a #ClutterKnot with new coordinances for the control point.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_ellipse_set_angle_tilt">
<description>
Sets the angle at which the ellipse should be tilted around it&apos;s center.

Since: 0.4

</description>
<parameters>
<parameter name="self">
<parameter_description> a #ClutterBehaviourEllipse
</parameter_description>
</parameter>
<parameter name="axis">
<parameter_description> a #ClutterRotateAxis
</parameter_description>
</parameter>
<parameter name="angle_tilt">
<parameter_description> tilt of the elipse around the center in the given axis in
degrees.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_glx_set_stage_foreign">
<description>
Target the #ClutterStage to use an existing external X Window


</description>
<parameters>
<parameter name="stage">
<parameter_description> a #ClutterStage
</parameter_description>
</parameter>
<parameter name="xwindow">
<parameter_description> an existing X Window id
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if foreign window is valid

Since: 0.4
</return>
</function>

<function name="clutter_alpha_set_func">
<description>
Sets the #ClutterAlphaFunc function used to compute
the alpha value at each frame of the #ClutterTimeline
bound to @alpha.

Since: 0.2

</description>
<parameters>
<parameter name="alpha">
<parameter_description> A #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="func">
<parameter_description> A #ClutterAlphaAlphaFunc
</parameter_description>
</parameter>
<parameter name="data">
<parameter_description> user data to be passed to the alpha function, or %NULL
</parameter_description>
</parameter>
<parameter name="destroy">
<parameter_description> notify function used when disposing the alpha function
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_box_query_nth_child">
<description>
Queries the child of @box at @index_ and puts the packing informations
inside @child.


</description>
<parameters>
<parameter name="box">
<parameter_description> a #ClutterBox
</parameter_description>
</parameter>
<parameter name="index_">
<parameter_description> position of the child
</parameter_description>
</parameter>
<parameter name="child">
<parameter_description> return value for a #ClutterBoxChild, or %NULL
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if an actor was found at @index_

Since: 0.4
</return>
</function>

<function name="clutter_glx_get_default_display">
<description>
FIXME


</description>
<parameters>
</parameters>
<return> FIXME

Since: 0.4
</return>
</function>

<function name="clutter_color_subtract">
<description>
Subtracts @src2 from @src1 and saves the resulting
color inside @dest. This function assumes that the components
of @src1 are greater than the components of @src2; the result is,
otherwise, undefined.

The alpha channel of @dest is set as the minimum value
between the alpha channels of @src1 and @src2.

</description>
<parameters>
<parameter name="src1">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
<parameter name="src2">
<parameter_description> a #ClutterColor
</parameter_description>
</parameter>
<parameter name="dest">
<parameter_description> return location for the result
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_get_actor_by_id">
<description>
FIXME.

Since: 0.6

</description>
<parameters>
<parameter name="id">
<parameter_description> a #ClutterActor ID.
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_behaviour_scale_get_boundsx">
<description>
Retrieves the bounds used by scale behaviour.

Since: 0.4

</description>
<parameters>
<parameter name="scale">
<parameter_description> a #ClutterBehaviourScale
</parameter_description>
</parameter>
<parameter name="scale_begin">
<parameter_description> return location for the initial scale factor
</parameter_description>
</parameter>
<parameter name="scale_end">
<parameter_description> return location for the final scale factor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_stage_fullscreen">
<description>
Asks to place the stage window in the fullscreen state. Note that you
shouldn&apos;t assume the window is definitely full screen afterward, because
other entities (e.g. the user or window manager) could unfullscreen it
again, and not all window managers honor requests to fullscreen windows.

</description>
<parameters>
<parameter name="stage">
<parameter_description> a #ClutterStage
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_square_func">
<description>
Convenience alpha function for a square wave. You can use this
function as the alpha function for clutter_alpha_set_func().


</description>
<parameters>
<parameter name="alpha">
<parameter_description> a #ClutterAlpha
</parameter_description>
</parameter>
<parameter name="dummy">
<parameter_description> unused argument
</parameter_description>
</parameter>
</parameters>
<return> an alpha value

Since: 0.4
</return>
</function>

<function name="json_node_get_value">
<description>
Retrieves a value from a #JsonNode and copies into @value. When done
using it, call g_value_unset() on the #GValue.

</description>
<parameters>
<parameter name="node">
<parameter_description> a #JsonNode
</parameter_description>
</parameter>
<parameter name="value">
<parameter_description> return location for an uninitialized value
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="ClutterBehaviour">
<description>
The ::removed signal is emitted each time a behaviour is not applied
to an actor anymore.


</description>
<parameters>
<parameter name="behaviour">
<parameter_description> the #ClutterBehaviour that received the signal
</parameter_description>
</parameter>
<parameter name="actor">
<parameter_description> the removed actor
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="clutter_actor_get_opacity">
<description>
Retrieves the actors opacity.


</description>
<parameters>
<parameter name="self">
<parameter_description> A #ClutterActor
</parameter_description>
</parameter>
</parameters>
<return> The actor opacity value.
</return>
</function>

<function name="clutter_behaviour_get_alpha">
<description>
Retrieves the #ClutterAlpha object bound to @behave.


</description>
<parameters>
<parameter name="behave">
<parameter_description> a #ClutterBehaviour
</parameter_description>
</parameter>
</parameters>
<return> a #ClutterAlpha object, or %NULL if no alpha
object has been bound to this behaviour.

Since: 0.2
</return>
</function>

</root>
