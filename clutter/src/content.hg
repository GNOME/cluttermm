/* Copyright (C) 2014 The cluttermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


#include <glibmm/object.h>
#include <glibmm/interface.h>
#include <glibmm/ustring.h>
#include <cluttermm/actor.h>
#include <clutter/clutter.h>

_DEFS(cluttermm,clutter)
_PINCLUDE(glibmm/private/interface_p.h)

#ifndef DOXYGEN_SHOULD_SKIP_THIS
extern "C"
{
typedef struct _ClutterContentIface   ClutterContentIface;
}
#endif /* DOXYGEN_SHOULD_SKIP_THIS */



namespace Clutter
{

//TODO: Documentation
class Content : public Glib::Interface
{
  _CLASS_INTERFACE(Content, ClutterContent, CLUTTER_CONTENT, ClutterContentIface)
public:

  _WRAP_METHOD(bool get_preferred_size(float& width, float& height) const, clutter_content_get_preferred_size)

protected:
  _WRAP_METHOD(void invalidate(), clutter_content_invalidate)

#m4 _CONVERSION(`gfloat*',`float&',`*($3)')
  _WRAP_VFUNC(bool get_preferred_size(float& width, float& height) const, get_preferred_size)

  //TODO: Wrap ClutterPaintNode? _WRAP_VFUNC(void paint_content(const Glib::RefPtr<Actor>& actor, ClutterPaintNode* node), paint_content)

#m4 _CONVERSION(`ClutterActor*',`const Glib::RefPtr<Actor>&',`Glib::wrap($3, true)')
  _WRAP_VFUNC(void attached(const Glib::RefPtr<Actor>& actor), attached)
  _WRAP_VFUNC(void detached(const Glib::RefPtr<Actor>& actor), detached)
  _WRAP_VFUNC(void invalidate(), invalidate)
};

}
