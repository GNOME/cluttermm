;; From clutter/clutter-actor.h

(define-flags-extended ActorFlags
  (in-module "Clutter")
  (c-name "ClutterActorFlags")
  (values
    '("mapped" "CLUTTER_ACTOR_MAPPED" "1 << 1")
    '("realized" "CLUTTER_ACTOR_REALIZED" "1 << 2")
    '("reactive" "CLUTTER_ACTOR_REACTIVE" "1 << 3")
  )
)

;; From clutter/clutter-event.h

(define-flags-extended ModifierType
  (in-module "Clutter")
  (c-name "ClutterModifierType")
  (values
    '("shift-mask" "CLUTTER_SHIFT_MASK" "1 << 0")
    '("lock-mask" "CLUTTER_LOCK_MASK" "1 << 1")
    '("control-mask" "CLUTTER_CONTROL_MASK" "1 << 2")
    '("mod1-mask" "CLUTTER_MOD1_MASK" "1 << 3")
    '("mod2-mask" "CLUTTER_MOD2_MASK" "1 << 4")
    '("mod3-mask" "CLUTTER_MOD3_MASK" "1 << 5")
    '("mod4-mask" "CLUTTER_MOD4_MASK" "1 << 6")
    '("mod5-mask" "CLUTTER_MOD5_MASK" "1 << 7")
    '("button1-mask" "CLUTTER_BUTTON1_MASK" "1 << 8")
    '("button2-mask" "CLUTTER_BUTTON2_MASK" "1 << 9")
    '("button3-mask" "CLUTTER_BUTTON3_MASK" "1 << 10")
    '("button4-mask" "CLUTTER_BUTTON4_MASK" "1 << 11")
    '("button5-mask" "CLUTTER_BUTTON5_MASK" "1 << 12")
    '("super-mask" "CLUTTER_SUPER_MASK" "1 << 26")
    '("hyper-mask" "CLUTTER_HYPER_MASK" "1 << 27")
    '("meta-mask" "CLUTTER_META_MASK" "1 << 28")
    '("release-mask" "CLUTTER_RELEASE_MASK" "1 << 30")
    '("modifier-mask" "CLUTTER_MODIFIER_MASK" "0x5c001fff")
  )
)

(define-flags-extended EventFlags
  (in-module "Clutter")
  (c-name "ClutterEventFlags")
  (values
    '("c" "CLUTTER_EVENT_FLAG_SYNTHETIC" "1 << 0")
  )
)

(define-enum-extended EventType
  (in-module "Clutter")
  (c-name "ClutterEventType")
  (values
    '("nothing" "CLUTTER_NOTHING" "0")
    '("key-press" "CLUTTER_KEY_PRESS" "1")
    '("key-release" "CLUTTER_KEY_RELEASE" "2")
    '("motion" "CLUTTER_MOTION" "3")
    '("enter" "CLUTTER_ENTER" "4")
    '("leave" "CLUTTER_LEAVE" "5")
    '("button-press" "CLUTTER_BUTTON_PRESS" "6")
    '("button-release" "CLUTTER_BUTTON_RELEASE" "7")
    '("scroll" "CLUTTER_SCROLL" "8")
    '("stage-state" "CLUTTER_STAGE_STATE" "9")
    '("destroy-notify" "CLUTTER_DESTROY_NOTIFY" "10")
    '("client-message" "CLUTTER_CLIENT_MESSAGE" "11")
    '("delete" "CLUTTER_DELETE" "12")
  )
)

(define-enum-extended ScrollDirection
  (in-module "Clutter")
  (c-name "ClutterScrollDirection")
  (values
    '("up" "CLUTTER_SCROLL_UP" "0")
    '("down" "CLUTTER_SCROLL_DOWN" "1")
    '("left" "CLUTTER_SCROLL_LEFT" "2")
    '("right" "CLUTTER_SCROLL_RIGHT" "3")
  )
)

(define-flags-extended StageState
  (in-module "Clutter")
  (c-name "ClutterStageState")
  (values
    '("fullscreen" "CLUTTER_STAGE_STATE_FULLSCREEN" "1<<1")
    '("offscreen" "CLUTTER_STAGE_STATE_OFFSCREEN" "1<<2")
    '("activated" "CLUTTER_STAGE_STATE_ACTIVATED" "1<<3")
  )
)

;; From clutter/clutter-feature.h

(define-flags-extended FeatureFlags
  (in-module "Clutter")
  (c-name "ClutterFeatureFlags")
  (values
    '("texture-npot" "CLUTTER_FEATURE_TEXTURE_NPOT" "1 << 2")
    '("sync-to-vblank" "CLUTTER_FEATURE_SYNC_TO_VBLANK" "1 << 3")
    '("texture-yuv" "CLUTTER_FEATURE_TEXTURE_YUV" "1 << 4")
    '("texture-read-pixels" "CLUTTER_FEATURE_TEXTURE_READ_PIXELS" "1 << 5")
    '("stage-static" "CLUTTER_FEATURE_STAGE_STATIC" "1 << 6")
    '("stage-user-resize" "CLUTTER_FEATURE_STAGE_USER_RESIZE" "1 << 7")
    '("stage-cursor" "CLUTTER_FEATURE_STAGE_CURSOR" "1 << 8")
    '("shaders-glsl" "CLUTTER_FEATURE_SHADERS_GLSL" "1 << 9")
    '("offscreen" "CLUTTER_FEATURE_OFFSCREEN" "1 << 10")
    '("stage-multiple" "CLUTTER_FEATURE_STAGE_MULTIPLE" "1 << 11")
  )
)

;; From clutter/clutter-main.h

(define-enum-extended InitError
  (in-module "Clutter")
  (c-name "ClutterInitError")
  (values
    '("success" "CLUTTER_INIT_SUCCESS" "1")
    '("error-unknown" "CLUTTER_INIT_ERROR_UNKNOWN" "0")
    '("error-threads" "CLUTTER_INIT_ERROR_THREADS" "-1")
    '("error-backend" "CLUTTER_INIT_ERROR_BACKEND" "-2")
    '("error-internal" "CLUTTER_INIT_ERROR_INTERNAL" "-3")
  )
)

;; From clutter/clutter-path.h
;; hand-edited to deal with CLUTTER_PATH_RELATIVE flag

(define-flags-extended PathNodeType
  (in-module "Clutter")
  (c-name "ClutterPathNodeType")
  (values
    '("move-to" "CLUTTER_PATH_MOVE_TO" "0")
    '("line-to" "CLUTTER_PATH_LINE_TO" "1")
    '("curve-to" "CLUTTER_PATH_CURVE_TO" "2")
    '("close" "CLUTTER_PATH_CLOSE" "3")
    '("relative" "CLUTTER_PATH_RELATIVE" "32")
    '("rel-move-to" "CLUTTER_PATH_REL_MOVE_TO" "PATH_MOVE_TO | PATH_RELATIVE")
    '("rel-line-to" "CLUTTER_PATH_REL_LINE_TO" "PATH_LINE_TO | PATH_RELATIVE")
    '("rel-curve-to" "CLUTTER_PATH_REL_CURVE_TO" "PATH_CURVE_TO | PATH_RELATIVE")
  )
)

;; From clutter/clutter-script.h

(define-enum-extended ScriptError
  (in-module "Clutter")
  (c-name "ClutterScriptError")
  (values
    '("type-function" "CLUTTER_SCRIPT_ERROR_INVALID_TYPE_FUNCTION" "0")
    '("property" "CLUTTER_SCRIPT_ERROR_INVALID_PROPERTY" "1")
    '("value" "CLUTTER_SCRIPT_ERROR_INVALID_VALUE" "2")
  )
)

;; From clutter/clutter-shader.h

(define-enum-extended ShaderError
  (in-module "Clutter")
  (c-name "ClutterShaderError")
  (values
    '("no-asm" "CLUTTER_SHADER_ERROR_NO_ASM" "0")
    '("no-glsl" "CLUTTER_SHADER_ERROR_NO_GLSL" "1")
    '("compile" "CLUTTER_SHADER_ERROR_COMPILE" "2")
  )
)

;; From clutter/clutter-texture.h

(define-enum-extended TextureError
  (in-module "Clutter")
  (c-name "ClutterTextureError")
  (values
    '("out-of-memory" "CLUTTER_TEXTURE_ERROR_OUT_OF_MEMORY" "0")
    '("no-yuv" "CLUTTER_TEXTURE_ERROR_NO_YUV" "1")
    '("bad-format" "CLUTTER_TEXTURE_ERROR_BAD_FORMAT" "2")
  )
)

(define-flags-extended TextureFlags
  (in-module "Clutter")
  (c-name "ClutterTextureFlags")
  (values
    '("rgb-flag-bgr" "CLUTTER_TEXTURE_RGB_FLAG_BGR" "1 << 1")
    '("rgb-flag-premult" "CLUTTER_TEXTURE_RGB_FLAG_PREMULT" "1 << 2")
    '("yuv-flag-yuv2" "CLUTTER_TEXTURE_YUV_FLAG_YUV2" "1 << 3")
  )
)

(define-enum-extended TextureQuality
  (in-module "Clutter")
  (c-name "ClutterTextureQuality")
  (values
    '("low" "CLUTTER_TEXTURE_QUALITY_LOW" "0")
    '("medium" "CLUTTER_TEXTURE_QUALITY_MEDIUM" "1")
    '("high" "CLUTTER_TEXTURE_QUALITY_HIGH" "2")
  )
)

;; From clutter/clutter-timeline.h

(define-enum-extended TimelineDirection
  (in-module "Clutter")
  (c-name "ClutterTimelineDirection")
  (values
    '("forward" "CLUTTER_TIMELINE_FORWARD" "0")
    '("backward" "CLUTTER_TIMELINE_BACKWARD" "1")
  )
)

;; From clutter/clutter-types.h

(define-enum-extended Gravity
  (in-module "Clutter")
  (c-name "ClutterGravity")
  (values
    '("none" "CLUTTER_GRAVITY_NONE" "0")
    '("north" "CLUTTER_GRAVITY_NORTH" "1")
    '("north-east" "CLUTTER_GRAVITY_NORTH_EAST" "2")
    '("east" "CLUTTER_GRAVITY_EAST" "3")
    '("south-east" "CLUTTER_GRAVITY_SOUTH_EAST" "4")
    '("south" "CLUTTER_GRAVITY_SOUTH" "5")
    '("south-west" "CLUTTER_GRAVITY_SOUTH_WEST" "6")
    '("west" "CLUTTER_GRAVITY_WEST" "7")
    '("north-west" "CLUTTER_GRAVITY_NORTH_WEST" "8")
    '("center" "CLUTTER_GRAVITY_CENTER" "9")
  )
)

(define-enum-extended RotateAxis
  (in-module "Clutter")
  (c-name "ClutterRotateAxis")
  (values
    '("x-axis" "CLUTTER_X_AXIS" "0")
    '("y-axis" "CLUTTER_Y_AXIS" "1")
    '("z-axis" "CLUTTER_Z_AXIS" "2")
  )
)

(define-enum-extended RotateDirection
  (in-module "Clutter")
  (c-name "ClutterRotateDirection")
  (values
    '("cw" "CLUTTER_ROTATE_CW" "0")
    '("ccw" "CLUTTER_ROTATE_CCW" "1")
  )
)

(define-enum-extended RequestMode
  (in-module "Clutter")
  (c-name "ClutterRequestMode")
  (values
    '("height-for-width" "CLUTTER_REQUEST_HEIGHT_FOR_WIDTH" "0")
    '("width-for-height" "CLUTTER_REQUEST_WIDTH_FOR_HEIGHT" "1")
  )
)

(define-enum-extended AnimationMode
  (in-module "Clutter")
  (c-name "ClutterAnimationMode")
  (values
    '("custom-mode" "CLUTTER_CUSTOM_MODE" "0")
    '("linear" "CLUTTER_LINEAR" "1")
    '("sine-in" "CLUTTER_SINE_IN" "2")
    '("sine-out" "CLUTTER_SINE_OUT" "3")
    '("sine-in-out" "CLUTTER_SINE_IN_OUT" "4")
    '("ease-in" "CLUTTER_EASE_IN" "5")
    '("ease-out" "CLUTTER_EASE_OUT" "6")
    '("ease-in-out" "CLUTTER_EASE_IN_OUT" "7")
    '("expo-in" "CLUTTER_EXPO_IN" "8")
    '("expo-out" "CLUTTER_EXPO_OUT" "9")
    '("expo-in-out" "CLUTTER_EXPO_IN_OUT" "10")
    '("smooth-in-out" "CLUTTER_SMOOTH_IN_OUT" "11")
  )
)

;; From clutter/json/json-parser.h

(define-enum-extended ParserError
  (in-module "Json")
  (c-name "JsonParserError")
  (values
    '("parse" "JSON_PARSER_ERROR_PARSE" "0")
    '("unknown" "JSON_PARSER_ERROR_UNKNOWN" "1")
  )
)

;; hand-edited to fix reference to G_TOKEN_LAST
(define-enum-extended TokenType
  (in-module "Json")
  (c-name "JsonTokenType")
  (values
    '("invalid" "JSON_TOKEN_INVALID" "270")
    '("true" "JSON_TOKEN_TRUE" "271")
    '("false" "JSON_TOKEN_FALSE" "272")
    '("null" "JSON_TOKEN_NULL" "273")
    '("last" "JSON_TOKEN_LAST" "274")
  )
)

;; From clutter/json/json-types.h

(define-enum-extended NodeType
  (in-module "Json")
  (c-name "JsonNodeType")
  (values
    '("object" "JSON_NODE_OBJECT" "0")
    '("array" "JSON_NODE_ARRAY" "1")
    '("value" "JSON_NODE_VALUE" "2")
    '("null" "JSON_NODE_NULL" "3")
  )
)

;; From clutter/x11/clutter-x11.h

(define-enum-extended X11FilterReturn
  (in-module "Clutter")
  (c-name "ClutterX11FilterReturn")
  (values
    '("continue" "CLUTTER_X11_FILTER_CONTINUE" "0")
    '("translate" "CLUTTER_X11_FILTER_TRANSLATE" "1")
    '("remove" "CLUTTER_X11_FILTER_REMOVE" "2")
  )
)

(define-enum-extended X11XInputEventTypes
  (in-module "Clutter")
  (c-name "ClutterX11XInputEventTypes")
  (values
    '("key-press-event" "CLUTTER_X11_XINPUT_KEY_PRESS_EVENT" "0")
    '("key-release-event" "CLUTTER_X11_XINPUT_KEY_RELEASE_EVENT" "1")
    '("button-press-event" "CLUTTER_X11_XINPUT_BUTTON_PRESS_EVENT" "2")
    '("button-release-event" "CLUTTER_X11_XINPUT_BUTTON_RELEASE_EVENT" "3")
    '("motion-notify-event" "CLUTTER_X11_XINPUT_MOTION_NOTIFY_EVENT" "4")
    '("last-event" "CLUTTER_X11_XINPUT_LAST_EVENT" "5")
  )
)

(define-enum-extended X11InputDeviceType
  (in-module "Clutter")
  (c-name "ClutterX11InputDeviceType")
  (values
    '("pointer-device" "CLUTTER_X11_XINPUT_POINTER_DEVICE" "0")
    '("keyboard-device" "CLUTTER_X11_XINPUT_KEYBOARD_DEVICE" "1")
    '("extension-device" "CLUTTER_X11_XINPUT_EXTENSION_DEVICE" "2")
  )
)

