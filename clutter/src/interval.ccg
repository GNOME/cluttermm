/* Copyright (C) 2007 The cluttermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <clutter/clutter.h>

namespace Clutter
{

Interval::Interval(GType type, const Glib::ValueBase& initial, const Glib::ValueBase& final)
:
  // Mark this class as non-derived to allow C++ vfuncs to be skipped.
  Glib::ObjectBase(0),
  Glib::Object(Glib::ConstructParams(interval_class_.init(), "value_type", type, static_cast<char*>(0)))
{
  _INITIALLY_UNOWNED_SINK
  set_interval(initial, final);
}

void Interval::set_interval(const Glib::ValueBase& initial, const Glib::ValueBase& final)
{
  set_initial_value(initial);
  set_final_value(final);
}

void Interval::get_interval(Glib::ValueBase& initial, Glib::ValueBase& final)
{
  get_initial_value(initial);
  get_final_value(final);
}

} //namespace Clutter

