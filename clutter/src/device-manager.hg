/* Copyright (C) 2011 The cluttermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/object.h>
#include <cluttermm/input-device.h>

_DEFS(cluttermm,clutter)
_PINCLUDE(glibmm/private/object_p.h)

namespace Clutter
{

class Backend;

class DeviceManager : public Glib::Object
{
  _CLASS_GOBJECT(DeviceManager, ClutterDeviceManager, CLUTTER_DEVICE_MANAGER, Glib::Object, GObject)

protected:
  _CTOR_DEFAULT()

public:

  Glib::RefPtr<DeviceManager> get_default();

  _IGNORE(clutter_device_manager_peek_devices, clutter_device_manager_list_devices)
  _WRAP_METHOD_DOCS_ONLY(clutter_device_manager_list_devices)
  std::vector<Glib::RefPtr<InputDevice> >       list_devices();
  std::vector<Glib::RefPtr<const InputDevice> > list_devices() const;

  _WRAP_METHOD(Glib::RefPtr<InputDevice> get_device(int device_id), clutter_device_manager_get_device)
  _WRAP_METHOD(Glib::RefPtr<InputDevice> get_core_device(InputDeviceType device_type), clutter_device_manager_get_core_device)

  _IGNORE(clutter_get_input_device_for_id)

  _WRAP_PROPERTY("backend", Glib::RefPtr<Backend>)
};

} // namespace Clutter
