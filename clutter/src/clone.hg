/* Copyright (C) 2007-2009 The cluttermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <cluttermm/texture.h>
#include <cluttermm/types.h>
 
_DEFS(cluttermm,clutter)
_PINCLUDE(cluttermm/private/actor_p.h)


namespace Clutter
{

class Clone :
  public Actor
{
  _CLASS_GOBJECT(Clone, ClutterClone, CLUTTER_CLONE, Actor, ClutterActor)

protected:
  _WRAP_CTOR(Clone(const Glib::RefPtr<Actor>& source), clutter_clone_new)

public:
#m4 _CONVERSION(`ClutterActor*',`Glib::RefPtr<Clone>',`Glib::wrap((ClutterCloneTexture*)$3)')

  _WRAP_CREATE(const Glib::RefPtr<Actor>& source);

  _WRAP_METHOD(Glib::RefPtr<Actor> get_source(), clutter_clone_get_source)
  _WRAP_METHOD(Glib::RefPtr<const Actor> get_source() const, clutter_clone_get_source, refreturn)
  _WRAP_METHOD(void get_source(const Glib::RefPtr<Actor>& source), clutter_clone_set_source)

};

} // namespace Clutter

//vim: ts=2,sw=2
