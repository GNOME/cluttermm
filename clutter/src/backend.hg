/* Copyright (C) 2009-2014 The cluttermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/object.h>
#include <cairomm/fontoptions.h>

_DEFS(cluttermm,clutter)
_PINCLUDE(glibmm/private/object_p.h)

namespace Clutter
{

class Backend :
  public Glib::Object
{
  _CLASS_GOBJECT(Backend, ClutterBackend, CLUTTER_BACKEND, Glib::Object, GObject)

protected:
  _CTOR_DEFAULT()

public:
  _WRAP_METHOD(static Glib::RefPtr<Backend> get_default(), clutter_get_default_backend, refreturn)










  _WRAP_METHOD(::Cairo::FontOptions get_font_options() const, clutter_backend_get_font_options)
  _WRAP_METHOD(void set_font_options(const ::Cairo::FontOptions& options), clutter_backend_set_font_options)




  //Experimental API: clutter_backend_get_cogl_context

  //We use no_default_handler because the C class struct is hidden. TODO: Is this still true.
  _WRAP_SIGNAL(void font_changed(), "font-changed", no_default_handler)
  _WRAP_SIGNAL(void resolution_changed(), "resolution-changed", no_default_handler)
  _WRAP_SIGNAL(void settings_changed(),  "settings-changed", no_default_handler)
};

} // namespace Clutter

//vim: ts=2,sw=2
