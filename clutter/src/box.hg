/* Copyright (C) 2011 The cluttermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <cluttermm/container.h>
#include <cluttermm/layout-manager.h>
#include <cluttermm/color.h>

_DEFS(cluttermm,clutter)
_PINCLUDE(cluttermm/private/actor_p.h)
_PINCLUDE(cluttermm/private/container_p.h)

namespace Clutter
{

class Box :
    public Actor,
    public Container
{
  _CLASS_GOBJECT(Box, ClutterBox, CLUTTER_BOX, Actor, ClutterActor)
  _IMPLEMENTS_INTERFACE(Container)

protected:
  _CTOR_DEFAULT()
  _WRAP_CTOR(Box(const Glib::RefPtr<LayoutManager>& layoutManager), clutter_box_new)

public:
  _WRAP_CREATE()
  _WRAP_CREATE(const Glib::RefPtr<LayoutManager>& layoutManager)

  _WRAP_METHOD(Glib::RefPtr<LayoutManager> get_layout_manager(), clutter_box_get_layout_manager, refreturn)
  _WRAP_METHOD(Glib::RefPtr<const LayoutManager> get_layout_manager() const, clutter_box_get_layout_manager, refreturn, constversion)

  _WRAP_METHOD(void set_color(const Color& color), clutter_box_set_color)

  _WRAP_METHOD_DOCS_ONLY(clutter_box_get_color)
  Color get_color() const;

  _IGNORE(clutter_box_packv, clutter_box_pack, clutter_box_pack_before, clutter_box_pack_after, clutter_box_pack_at)

  // TODO: Documentation
  void pack(const Glib::RefPtr<Actor>& actor, const std::map<std::string, Glib::ValueBase>& properties);

  _WRAP_PROPERTY("color", Color)
  _WRAP_PROPERTY("color-set", bool)
  _WRAP_PROPERTY("layout-manager", Glib::RefPtr<LayoutManager>)
};

} // namespace Clutter
