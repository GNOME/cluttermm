/* Copyright (C) 2007 The cluttermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <clutter/clutter.h>

namespace Clutter
{

gulong Score::append(const Glib::RefPtr<Timeline>& timeline)
{
  return clutter_score_append(gobj(), NULL, timeline->gobj());
}

std::vector<Glib::RefPtr<Timeline> > Score::list_timelines()
{
  GSList* timelineList = clutter_score_list_timelines(gobj());
  const uint timelineCount = g_slist_length(timelineList);
  std::vector<Glib::RefPtr<Timeline> > timelineVec;
  timelineVec.reserve(timelineCount);

  for(GSList* timelineNode = timelineList; timelineNode->next != NULL; timelineNode = timelineList->next)
  {
    timelineVec.push_back(Glib::wrap(static_cast<ClutterTimeline*>(timelineNode->data), true));
  }

  return timelineVec;
}

    std::vector<Glib::RefPtr<const Timeline> > Score::list_timelines() const
{
  GSList* timelineList = clutter_score_list_timelines(const_cast<ClutterScore*>(gobj()));
  const uint timelineCount = g_slist_length(timelineList);
  std::vector<Glib::RefPtr<const Timeline> > timelineVec;
  timelineVec.reserve(timelineCount);

  for(GSList* timelineNode = timelineList; timelineNode->next != NULL; timelineNode = timelineList->next)
  {
    timelineVec.push_back(Glib::wrap(static_cast<ClutterTimeline*>(timelineNode->data), true));
  }

  return timelineVec;
}

} // namespace Clutter
