/* Copyright (C) 2007 The cluttermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <clutter/clutter.h>


namespace Clutter
{

void Container::get_child_property_value(const Glib::RefPtr<const Actor>& child,
                     const Glib::ustring& property_name, Glib::ValueBase& value) const
{
  clutter_container_child_get_property(const_cast<ClutterContainer*>(gobj()),
      const_cast<ClutterActor*>(child->gobj()), property_name.c_str(), value.gobj());
}

void Container::actor_added(const Glib::RefPtr<Actor>& actor)
{
  g_signal_emit_by_name(gobj(), "actor_added", actor->gobj());
}

void Container::actor_removed(const Glib::RefPtr<Actor>& actor)
{
  g_signal_emit_by_name(gobj(), "actor_removed", actor->gobj());
}

} // namespace Clutter
